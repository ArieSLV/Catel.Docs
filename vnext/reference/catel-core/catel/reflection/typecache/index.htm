<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>TypeCache - Catel documentation</title>
    <link rel="shortcut icon" href="../../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../../../home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../introduction/">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../faq/">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../setup-deployment/">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../getting-started/">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../examples/">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-core/">Catel.Core</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-mvvm/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-fody/">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-resharper/">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../tips-tricks/">Tips & tricks</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/">API reference</a></span></li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/catel-core/">Catel.Core</a></span></li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/catel-core/catel/">Catel</a></span></li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/applicationextensions/">ApplicationExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/argument/">Argument</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/asynceventhandler/">AsyncEventHandler</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/asynceventhandlerextensions/">AsyncEventHandlerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/bytearrayextensions/">ByteArrayExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/catelenvironment/">CatelEnvironment</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/compositefilter/">CompositeFilter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/compositepredicate/">CompositePredicate</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/coremodule/">CoreModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/designtimecodeattribute/">DesignTimeCodeAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/designtimehelper/">DesignTimeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/designtimeinitializer/">DesignTimeInitializer</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/disposable/">Disposable</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/disposabletoken/">DisposableToken</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/enum/">Enum</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/environmenthelper/">EnvironmentHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/eventhandlerextensions/">EventHandlerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/exceptionextensions/">ExceptionExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/exceptionfactory/">ExceptionFactory</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/expressionhelper/">ExpressionHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/fastdatetime/">FastDateTime</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/hashhelper/">HashHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/ibindableenum/">IBindableEnum</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/icommandmanagerextensions/">ICommandManagerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/icompositefilter/">ICompositeFilter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/idisposabletoken/">IDisposableToken</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iexecute/">IExecute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iexecutewithobject/">IExecuteWithObject</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/ifluent/">IFluent</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/inotifypropertychangedextensions/">INotifyPropertyChangedExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iuniqueidentifyable/">IUniqueIdentifyable</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iweakaction/">IWeakAction</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iweakeventlistener/">IWeakEventListener</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iweakfunc/">IWeakFunc</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/iweakreference/">IWeakReference</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/jsonextensions/">JsonExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/knownplatforms/">KnownPlatforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/languagehelper/">LanguageHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/mustbeimplementedexception/">MustBeImplementedException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/mvvmmodule/">MVVMModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/notsupportedinplatformexception/">NotSupportedInPlatformException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/objecthelper/">ObjectHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/objecttostringhelper/">ObjectToStringHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/parallelhelper/">ParallelHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/platforms/">Platforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/processextensions/">ProcessExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/progresscontext/">ProgressContext</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/resourcehelper/">ResourceHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/serializationjsonmodule/">SerializationJsonModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/stringextensions/">StringExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/stringtoobjecthelper/">StringToObjectHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/supportedplatforms/">SupportedPlatforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/taghelper/">TagHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/themehelper/">ThemeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/threadhelper/">ThreadHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/uniqueidentifierhelper/">UniqueIdentifierHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/uriextensions/">UriExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/weakaction/">WeakAction</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/weakactionbase/">WeakActionBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/weakeventlistener/">WeakEventListener</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/weakfunc/">WeakFunc</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/android/">Android</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/apicop/">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/caching/">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/collections/">Collections</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/componentmodel/">ComponentModel</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/configuration/">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/core/">Core</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/data/">Data</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/exceptionhandling/">ExceptionHandling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/io/">IO</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/ioc/">IoC</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/logging/">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/messaging/">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/pooling/">Pooling</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/catel-core/catel/reflection/">Reflection</a></span></li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/appdomainextensions/">AppDomainExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/assemblyextensions/">AssemblyExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/assemblyhelper/">AssemblyHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/assemblyloadedeventargs/">AssemblyLoadedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/bindingflagshelper/">BindingFlagsHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/cachedpropertyinfo/">CachedPropertyInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/cannotgetpropertyvalueexception/">CannotGetPropertyValueException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/cannotsetpropertyvalueexception/">CannotSetPropertyValueException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/delegateextensions/">DelegateExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/delegatehelper/">DelegateHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/ientryassemblyresolver/">IEntryAssemblyResolver</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/memberinfoextensions/">MemberInfoExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/objectextensions/">ObjectExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/propertyhelper/">PropertyHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/propertynotfoundexception/">PropertyNotFoundException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/reflectionextensions/">ReflectionExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/statichelper/">StaticHelper</a>
</li>
<li class="tocentry current"><a class="current" href="../../../../../reference/catel-core/catel/reflection/typecache/">TypeCache</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#fields">Fields</a></li>

<li class="tocentry"><a href="#constructors">Constructors</a></li>

<li class="tocentry"><a href="#properties">Properties</a></li>
<li class="tocentry">
<ul class="currentrelative">
<li class="tocentry"><a href="#shouldignoreassemblyevaluators">ShouldIgnoreAssemblyEvaluators</a></li>

<li class="tocentry"><a href="#shouldignoretypeevaluators">ShouldIgnoreTypeEvaluators</a></li>


</ul>
</li>

<li class="tocentry"><a href="#events">Events</a></li>
<li class="tocentry">
<ul class="currentrelative">
<li class="tocentry"><a href="#assemblyloaded">AssemblyLoaded</a></li>


</ul>
</li>

<li class="tocentry"><a href="#methods">Methods</a></li>
<li class="tocentry">
<ul class="currentrelative">
<li class="tocentry"><a href="#gettypestring-typenamewithassembly-bool-ignorecase-bool-allowinitialization">GetType(string typeNameWithAssembly, bool ignoreCase, bool allowInitialization)</a></li>

<li class="tocentry"><a href="#gettypesfunctype-bool-predicate-bool-allowinitialization">GetTypes(Func&lt;Type, bool&gt; predicate, bool allowInitialization)</a></li>

<li class="tocentry"><a href="#gettypesimplementinginterfacetype-interfacetype">GetTypesImplementingInterface(Type interfaceType)</a></li>

<li class="tocentry"><a href="#gettypesofassemblyassembly-assembly-functype-bool-predicate">GetTypesOfAssembly(Assembly assembly, Func&lt;Type, bool&gt; predicate)</a></li>

<li class="tocentry"><a href="#gettypewithassemblystring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization">GetTypeWithAssembly(string typeName, string assemblyName, bool ignoreCase, bool allowInitialization)</a></li>

<li class="tocentry"><a href="#gettypewithoutassemblystring-typenamewithoutassembly-bool-ignorecase-bool-allowinitialization">GetTypeWithoutAssembly(string typeNameWithoutAssembly, bool ignoreCase, bool allowInitialization)</a></li>

<li class="tocentry"><a href="#initializetypesassembly-assembly-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(Assembly assembly, bool forceFullInitialization, bool allowMultithreadedInitialization)</a></li>

<li class="tocentry"><a href="#initializetypesstring-assemblyname-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(string assemblyName, bool forceFullInitialization, bool allowMultithreadedInitialization)</a></li>


</ul>
</li>



</ul>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/typeextensions/">TypeExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/typehelper/">TypeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/typeinfo/">TypeInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/catel-core/catel/reflection/typeinfoextensions/">TypeInfoExtensions</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/runtime/">Runtime</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/scoping/">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/services/">Services</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/test/">Test</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/text/">Text</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/catel/threading/">Threading</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-core/system/">System</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-mvvm/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/catel-serialization-json/">Catel.Serialization.Json</a></span>
</li>

</ul>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../../../home.htm">Home</a></li> / <li><a href="../../../../../reference/index.htm">API reference</a></li> / <li><a href="../../../../../reference/catel-core/index.htm">Catel.Core</a></li> / <li><a href="../../../../../reference/catel-core/catel/index.htm">Catel</a></li> / <li><a href="../../../../../reference/catel-core/catel/reflection/index.htm">Reflection</a></li> / <li><a href="../../../../../reference/catel-core/catel/reflection/typecache/index.htm">TypeCache</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="typecache">TypeCache<a class="headerlink" href="#typecache" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Name</th>
	<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
	<td>Assembly</td>
	<td>Catel.Core</td>
</tr>
<tr>
	<td>Namespace</td>
	<td>Catel.Reflection</td>
</tr>
<tr>
	<td>Available on</td>
	<td>.NET Framework 4.5, .NET Framework 4.6, Portable Class Libraries, Unknown, Windows 10.0 (Universal Apps), Xamarin - Android, Xamarin - iOS</td>
</tr>
</tbody>
</table>
<pre class="nocode">public static class TypeCache
</pre><p>Cache containing the types of an appdomain.</p>
<h2 id="fields">Fields<a class="headerlink" href="#fields" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h2 id="constructors">Constructors<a class="headerlink" href="#constructors" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h2 id="properties">Properties<a class="headerlink" href="#properties" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="shouldignoreassemblyevaluators">ShouldIgnoreAssemblyEvaluators<a class="headerlink" href="#shouldignoreassemblyevaluators" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the evaluators used to determine whether a specific assembly should be ignored.</p>
<h3 id="shouldignoretypeevaluators">ShouldIgnoreTypeEvaluators<a class="headerlink" href="#shouldignoretypeevaluators" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the evaluators used to determine whether a specific type should be ignored.</p>
<h2 id="events">Events<a class="headerlink" href="#events" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="assemblyloaded">AssemblyLoaded<a class="headerlink" href="#assemblyloaded" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when an assembly is loaded into the currently <a href="#">AppDomain</a>.</p>
<h2 id="methods">Methods<a class="headerlink" href="#methods" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="gettypestring-typenamewithassembly-bool-ignorecase-bool-allowinitialization">GetType(string typeNameWithAssembly, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypestring-typenamewithassembly-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the specified type from the loaded assemblies.</p>
<h4 id="parameters">Parameters<a class="headerlink" href="#parameters" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeNameWithAssembly</strong>
The name of the type including namespace and assembly, formatted with the String) method.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to<code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If<code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns">Returns<a class="headerlink" href="#returns" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or<code>null</code> if the type cannot be found.</p>
<h4 id="exceptions">Exceptions<a class="headerlink" href="#exceptions" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeNameWithAssembly is<code>null</code> or whitespace.</p>
<h3 id="gettypesfunctype-bool-predicate-bool-allowinitialization">GetTypes(Func&lt;Type, bool&gt; predicate, bool allowInitialization)<a class="headerlink" href="#gettypesfunctype-bool-predicate-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets all the types from the current <a href="#">AppDomain</a> where the predicate returns true.</p>
<h4 id="parameters-1">Parameters<a class="headerlink" href="#parameters-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>predicate</strong>
The predicate where the type should apply to.</p>
<p><strong>allowInitialization</strong>
If set to<code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If<code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-1">Returns<a class="headerlink" href="#returns-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>An array containing all the <a href="#">Type</a> that match the predicate.</p>
<h4 id="exceptions-1">Exceptions<a class="headerlink" href="#exceptions-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentNullException</strong>
The predicate is<code>null</code>.</p>
<h3 id="gettypesimplementinginterfacetype-interfacetype">GetTypesImplementingInterface(Type interfaceType)<a class="headerlink" href="#gettypesimplementinginterfacetype-interfacetype" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the types implementing the specified interface.</p>
<h4 id="parameters-2">Parameters<a class="headerlink" href="#parameters-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>interfaceType</strong>
Type of the interface.</p>
<h4 id="returns-2">Returns<a class="headerlink" href="#returns-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Type[].</p>
<h3 id="gettypesofassemblyassembly-assembly-functype-bool-predicate">GetTypesOfAssembly(Assembly assembly, Func&lt;Type, bool&gt; predicate)<a class="headerlink" href="#gettypesofassemblyassembly-assembly-functype-bool-predicate" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the types of the specified assembly.</p>
<h4 id="parameters-3">Parameters<a class="headerlink" href="#parameters-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly.</p>
<p><strong>predicate</strong>
The predicate to use on the types.</p>
<h4 id="returns-3">Returns<a class="headerlink" href="#returns-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>All types of the specified assembly.</p>
<h3 id="gettypewithassemblystring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization">GetTypeWithAssembly(string typeName, string assemblyName, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypewithassemblystring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the specified type from the loaded assemblies.</p>
<h4 id="parameters-4">Parameters<a class="headerlink" href="#parameters-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeName</strong>
The name of the type including namespace.</p>
<p><strong>assemblyName</strong>
The name of the type including namespace.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to<code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If<code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-4">Returns<a class="headerlink" href="#returns-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or<code>null</code> if the type cannot be found.</p>
<h4 id="exceptions-2">Exceptions<a class="headerlink" href="#exceptions-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeName is<code>null</code> or whitespace.</p>
<h3 id="gettypewithoutassemblystring-typenamewithoutassembly-bool-ignorecase-bool-allowinitialization">GetTypeWithoutAssembly(string typeNameWithoutAssembly, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypewithoutassemblystring-typenamewithoutassembly-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the type without assembly. For example, when the value<code>Catel.TypeHelper</code> is used as parameter, the type for<code>Catel.TypeHelper, Catel.Core</code> will be returned.</p>
<h4 id="parameters-5">Parameters<a class="headerlink" href="#parameters-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeNameWithoutAssembly</strong>
The type name without assembly.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to<code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If<code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-5">Returns<a class="headerlink" href="#returns-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or<code>null</code> if the type cannot be found.</p>
<h4 id="exceptions-3">Exceptions<a class="headerlink" href="#exceptions-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeNameWithoutAssembly is<code>null</code> or whitespace.</p>
<h4 id="remarks">Remarks<a class="headerlink" href="#remarks" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Note that this method can only support one type of &quot;simple type name&quot; resolving. For example, if &quot;Catel.TypeHelper&quot; is located in multiple assemblies, it will always use the latest known type for resolving the type.</p>
<h3 id="initializetypesassembly-assembly-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(Assembly assembly, bool forceFullInitialization, bool allowMultithreadedInitialization)<a class="headerlink" href="#initializetypesassembly-assembly-bool-forcefullinitialization-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the types in the specified assembly. It does this by looping through all loaded assemblies and registering the type by type name and assembly name. The types initialized by this method are used by GetType.</p>
<h4 id="parameters-6">Parameters<a class="headerlink" href="#parameters-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly to initialize the types from. If<code>null</code>, all assemblies will be checked.</p>
<p><strong>forceFullInitialization</strong>
If<code>true</code>, the types are initialized, even when the types are already initialized.</p>
<p><strong>allowMultithreadedInitialization</strong>
If<code>true</code>, allow multithreaded initialization. The default value is<code>false</code>.</p>
<h3 id="initializetypesstring-assemblyname-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(string assemblyName, bool forceFullInitialization, bool allowMultithreadedInitialization)<a class="headerlink" href="#initializetypesstring-assemblyname-bool-forcefullinitialization-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the types. It does this by looping through all loaded assemblies and registering the type by type name and assembly name. The types initialized by this method are used by GetType.</p>
<h4 id="parameters-7">Parameters<a class="headerlink" href="#parameters-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assemblyName</strong>
Name of the assembly. If<code>null</code>, all assemblies will be checked.</p>
<p><strong>forceFullInitialization</strong>
If<code>true</code>, the types are initialized, even when the types are already initialized.</p>
<p><strong>allowMultithreadedInitialization</strong>
If<code>true</code>, allow multithreaded initialization.</p>
<h4 id="exceptions-4">Exceptions<a class="headerlink" href="#exceptions-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The assemblyName is<code>null</code> or whitespace.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/Catel.Docs/blob/master/src/../src/vnext/reference/Catel.Core/Catel/Reflection/TypeCache.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   // Always use vNext so comments stay visible
					   this.page.url = 'http://docs.catelproject.com/vnext/reference/catel-core/catel/reflection/typecache/index.htm';
					   this.page.identifier = '../src/vnext/reference/Catel.Core/Catel/Reflection/TypeCache.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../../../js/highlight.pack.js"></script>
    <script src="../../../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
