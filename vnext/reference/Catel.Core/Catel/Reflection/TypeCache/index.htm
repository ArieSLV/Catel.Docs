<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>TypeCache - Catel documentation</title>
    <link rel="shortcut icon" href="../../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../../../../../index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../introduction/">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../faq/">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../setup-deployment/">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../getting-started/">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../examples/">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-core/">Catel.Core</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-mvvm/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-fody/">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-resharper/">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../tips-tricks/">Tips & tricks</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/">API reference</a></span></li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.Core/">Catel.Core</a></span></li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/MethodTimeLogger/">MethodTimeLogger</a>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.Core/Catel/">Catel</a></span></li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ApplicationExtensions/">ApplicationExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Argument/">Argument</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/AsyncEventHandler/">AsyncEventHandler</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/AsyncEventHandlerExtensions/">AsyncEventHandlerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ByteArrayExtensions/">ByteArrayExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/CatelEnvironment/">CatelEnvironment</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/CompositeFilter/">CompositeFilter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/CompositePredicate/">CompositePredicate</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/CoreModule/">CoreModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/CoverageExcludeAttribute/">CoverageExcludeAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/DesignTimeCodeAttribute/">DesignTimeCodeAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/DesignTimeHelper/">DesignTimeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/DesignTimeInitializer/">DesignTimeInitializer</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Disposable/">Disposable</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/DisposableToken/">DisposableToken</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Enum/">Enum</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/EnvironmentHelper/">EnvironmentHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/EventHandlerExtensions/">EventHandlerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ExceptionExtensions/">ExceptionExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ExceptionFactory/">ExceptionFactory</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ExcludeReason/">ExcludeReason</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ExpressionHelper/">ExpressionHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/FastDateTime/">FastDateTime</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/HashHelper/">HashHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/HttpContextHelper/">HttpContextHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IBindableEnum/">IBindableEnum</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ICommandManagerExtensions/">ICommandManagerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ICompositeFilter/">ICompositeFilter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IDisposableToken/">IDisposableToken</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IExecute/">IExecute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IExecuteWithObject/">IExecuteWithObject</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IFluent/">IFluent</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/INotifyPropertyChangedExtensions/">INotifyPropertyChangedExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IUniqueIdentifyable/">IUniqueIdentifyable</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IWeakAction/">IWeakAction</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IWeakEventListener/">IWeakEventListener</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/IWeakReference/">IWeakReference</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/JsonExtensions/">JsonExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/KnownPlatforms/">KnownPlatforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/LanguageHelper/">LanguageHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/MustBeImplementedException/">MustBeImplementedException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/MVVMModule/">MVVMModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/NotSupportedInPlatformException/">NotSupportedInPlatformException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ObjectHelper/">ObjectHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ObjectToStringHelper/">ObjectToStringHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ParallelHelper/">ParallelHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Platforms/">Platforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ProcessExtensions/">ProcessExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ProgressContext/">ProgressContext</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ResourceHelper/">ResourceHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/SerializationJsonModule/">SerializationJsonModule</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/StringExtensions/">StringExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/StringToObjectHelper/">StringToObjectHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/SupportedPlatforms/">SupportedPlatforms</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/TagHelper/">TagHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ThemeHelper/">ThemeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/ThreadHelper/">ThreadHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/UniqueIdentifierHelper/">UniqueIdentifierHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/UriExtensions/">UriExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/WeakAction/">WeakAction</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/WeakActionBase/">WeakActionBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/WeakEventListener/">WeakEventListener</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Android/">Android</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/ApiCop/">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Caching/">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Collections/">Collections</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/ComponentModel/">ComponentModel</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Configuration/">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Core/">Core</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Data/">Data</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/ExceptionHandling/">ExceptionHandling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/IO/">IO</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/IoC/">IoC</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Logging/">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Messaging/">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Pooling/">Pooling</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.Core/Catel/Reflection/">Reflection</a></span></li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/AppDomainExtensions/">AppDomainExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/AssemblyExtensions/">AssemblyExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/AssemblyHelper/">AssemblyHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/AssemblyLoadedEventArgs/">AssemblyLoadedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/BindingFlagsHelper/">BindingFlagsHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/CachedPropertyInfo/">CachedPropertyInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/CannotGetPropertyValueException/">CannotGetPropertyValueException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/CannotSetPropertyValueException/">CannotSetPropertyValueException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/DelegateExtensions/">DelegateExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/DelegateHelper/">DelegateHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/IEntryAssemblyResolver/">IEntryAssemblyResolver</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/MemberInfoExtensions/">MemberInfoExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/ObjectExtensions/">ObjectExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/PropertyHelper/">PropertyHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/PropertyNotFoundException/">PropertyNotFoundException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/ReflectionExtensions/">ReflectionExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/StaticHelper/">StaticHelper</a>
</li>
<li class="tocentry current"><a class="current" href="../../../../../reference/Catel.Core/Catel/Reflection/TypeCache/">TypeCache</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#fields">Fields</a></li>
<li class="tocentry"><a href="#constructors">Constructors</a></li>
<li class="tocentry"><a href="#properties">Properties</a></li>
<li class="tocentry"><a href="#events">Events</a></li>
<li class="tocentry"><a href="#methods">Methods</a></li>
</ul>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/TypeExtensions/">TypeExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/TypeHelper/">TypeHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/TypeInfo/">TypeInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.Core/Catel/Reflection/TypeInfoExtensions/">TypeInfoExtensions</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Runtime/">Runtime</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Scoping/">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Services/">Services</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Test/">Test</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Text/">Text</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/Catel/Threading/">Threading</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/System/">System</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Serialization.Json/">Catel.Serialization.Json</a></span>
</li>

</ul>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../../../Home.htm">Home</a></li> / <li><a href="../../../../../reference/index.htm">API reference</a></li> / <li><a href="../../../../../reference/Catel.Core/index.htm">Catel.Core</a></li> / <li><a href="../../../../../reference/Catel.Core/Catel/index.htm">Catel</a></li> / <li><a href="../../../../../reference/Catel.Core/Catel/Reflection/index.htm">Reflection</a></li> / <li><a href="../../../../../reference/Catel.Core/Catel/Reflection/TypeCache/index.htm">TypeCache</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="typecache">TypeCache<a class="headerlink" href="#typecache" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Name</th>
	<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
	<td>Assembly</td>
	<td>Catel.Core</td>
</tr>
<tr>
	<td>Namespace</td>
	<td>Catel.Reflection</td>
</tr>
<tr>
	<td>Available on</td>
	<td>.NET Framework 4.5, .NET Framework 4.6, Portable Class Libraries, Windows 10.0 (Universal Apps), Xamarin - Android, Xamarin - iOS</td>
</tr>
</tbody>
</table>
<pre class="nocode">public static class TypeCache
</pre><p>Cache containing the types of an appdomain.</p>
<h2 id="fields">Fields<a class="headerlink" href="#fields" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="hasinitializedonce">_hasInitializedOnce<a class="headerlink" href="#hasinitializedonce" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="isalreadyinloadingevent">_isAlreadyInLoadingEvent<a class="headerlink" href="#isalreadyinloadingevent" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The boolean specifying whether the type cache is already loading assemblies via the loaded event.</p>
<h3 id="loadedassemblies">_loadedAssemblies<a class="headerlink" href="#loadedassemblies" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The list of loaded assemblies which do not required additional initialization again.</p>
<pre><code>This is required because the AppDomain.AssemblyLoad might be called several times for the same AppDomain
</code></pre>

<h3 id="lockobject">_lockObject<a class="headerlink" href="#lockobject" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The lock object.</p>
<h3 id="onassemblyloadeddelayqueue">_onAssemblyLoadedDelayQueue<a class="headerlink" href="#onassemblyloadeddelayqueue" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Assemblies, loaded while Catel was processing AssemblyLoaded event.</p>
<h3 id="threadsafeassemblyqueue">_threadSafeAssemblyQueue<a class="headerlink" href="#threadsafeassemblyqueue" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="typesbyassembly">_typesByAssembly<a class="headerlink" href="#typesbyassembly" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types by assembly. This means that the first dictionary contains the assembly name
    and all types contained by that assembly.</p>
<h3 id="typesbyinterface">_typesByInterface<a class="headerlink" href="#typesbyinterface" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types implementing a specific interface.</p>
<h3 id="typeswithassembly">_typesWithAssembly<a class="headerlink" href="#typeswithassembly" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types based on a string. This way, it is easy to retrieve a type based on a 
    string containing the type name and assembly without the overhead, such as <code>Catel.TypeHelper, Catel.Core</code>.</p>
<h3 id="typeswithassemblylowercase">_typesWithAssemblyLowerCase<a class="headerlink" href="#typeswithassemblylowercase" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types based on a string. This way, it is easy to retrieve a type based on a 
    string containing the type name and assembly without the overhead, such as <code>Catel.TypeHelper, Catel.Core</code>.</p>
<h3 id="typeswithoutassembly">_typesWithoutAssembly<a class="headerlink" href="#typeswithoutassembly" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types based without an assembly. This means that a type with this format:
    <code>Catel.TypeHelper, Catel.Core</code> will be located as <code>Catel.TypeHelper</code>.</p>
<pre><code>The values resolved from this dictionary can be used as key in the _typesWithAssembly dictionary.
</code></pre>

<h3 id="typeswithoutassemblylowercase">_typesWithoutAssemblyLowerCase<a class="headerlink" href="#typeswithoutassemblylowercase" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cache containing all the types based without an assembly. This means that a type with this format:
    <code>Catel.TypeHelper, Catel.Core</code> will be located as <code>Catel.TypeHelper</code>.</p>
<pre><code>The values resolved from this dictionary can be used as key in the _typesWithAssembly dictionary.
</code></pre>

<h3 id="defaultcollectionsizeforassemblies">DefaultCollectionSizeForAssemblies<a class="headerlink" href="#defaultcollectionsizeforassemblies" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>50</p>
<h3 id="defaultcollectionsizefortypes">DefaultCollectionSizeForTypes<a class="headerlink" href="#defaultcollectionsizefortypes" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>10000</p>
<h3 id="log">Log<a class="headerlink" href="#log" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The <a href="#">ILog</a> object.</p>
<h2 id="constructors">Constructors<a class="headerlink" href="#constructors" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="typecache-1">TypeCache()<a class="headerlink" href="#typecache-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h2 id="properties">Properties<a class="headerlink" href="#properties" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="shouldignoreassemblyevaluators">ShouldIgnoreAssemblyEvaluators<a class="headerlink" href="#shouldignoreassemblyevaluators" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the evaluators used to determine whether a specific assembly should be ignored.</p>
<h3 id="shouldignoretypeevaluators">ShouldIgnoreTypeEvaluators<a class="headerlink" href="#shouldignoretypeevaluators" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the evaluators used to determine whether a specific type should be ignored.</p>
<h2 id="events">Events<a class="headerlink" href="#events" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="assemblyloaded">AssemblyLoaded<a class="headerlink" href="#assemblyloaded" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when an assembly is loaded into the currently <a href="#">AppDomain</a>.</p>
<h2 id="methods">Methods<a class="headerlink" href="#methods" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="getassemblytypeslist-assemblies-bool-allowmultithreadedinitialization">GetAssemblyTypes(List<Assembly> assemblies, bool allowMultithreadedInitialization)<a class="headerlink" href="#getassemblytypeslist-assemblies-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="gettypestring-typenamewithassembly-bool-ignorecase-bool-allowinitialization">GetType(string typeNameWithAssembly, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypestring-typenamewithassembly-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the specified type from the loaded assemblies.</p>
<h4 id="parameters">Parameters<a class="headerlink" href="#parameters" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeNameWithAssembly</strong>
The name of the type including namespace and assembly, formatted with the String) method.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns">Returns<a class="headerlink" href="#returns" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or <code>null</code> if the type cannot be found.</p>
<h4 id="exceptions">Exceptions<a class="headerlink" href="#exceptions" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeNameWithAssembly is <code>null</code> or whitespace.</p>
<h3 id="gettypestring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization">GetType(string typeName, string assemblyName, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypestring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the type.</p>
<h4 id="parameters-1">Parameters<a class="headerlink" href="#parameters-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeName</strong>
Name of the type.</p>
<p><strong>assemblyName</strong>
Name of the assembly. Can be <code>null</code> if no assembly is known.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-1">Returns<a class="headerlink" href="#returns-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or <code>null</code> if the type cannot be found.</p>
<h4 id="exceptions-1">Exceptions<a class="headerlink" href="#exceptions-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeName is <code>null</code> or whitespace.</p>
<h3 id="gettypebysplittinginternalsstring-typewithinnertypes">GetTypeBySplittingInternals(string typeWithInnerTypes)<a class="headerlink" href="#gettypebysplittinginternalsstring-typewithinnertypes" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the type by splitting internal types. This means that System.Collections.List`1[[MyCustomType.Item]] will be splitted
    and resolved separately.</p>
<h4 id="parameters-2">Parameters<a class="headerlink" href="#parameters-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeWithInnerTypes</strong>
The type with inner types.</p>
<h4 id="returns-2">Returns<a class="headerlink" href="#returns-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<h3 id="gettypesfunctype-bool-predicate-bool-allowinitialization">GetTypes(Func&lt;Type, bool&gt; predicate, bool allowInitialization)<a class="headerlink" href="#gettypesfunctype-bool-predicate-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets all the types from the current <a href="#">AppDomain</a> where the predicate returns true.</p>
<h4 id="parameters-3">Parameters<a class="headerlink" href="#parameters-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>predicate</strong>
The predicate where the type should apply to.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-3">Returns<a class="headerlink" href="#returns-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>An array containing all the <a href="#">Type</a> that match the predicate.</p>
<h4 id="exceptions-2">Exceptions<a class="headerlink" href="#exceptions-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentNullException</strong>
The predicate is <code>null</code>.</p>
<h3 id="gettypesimplementinginterfacetype-interfacetype">GetTypesImplementingInterface(Type interfaceType)<a class="headerlink" href="#gettypesimplementinginterfacetype-interfacetype" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the types implementing the specified interface.</p>
<h4 id="parameters-4">Parameters<a class="headerlink" href="#parameters-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>interfaceType</strong>
Type of the interface.</p>
<h4 id="returns-4">Returns<a class="headerlink" href="#returns-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Type[].</p>
<h3 id="gettypesofassemblyassembly-assembly-functype-bool-predicate">GetTypesOfAssembly(Assembly assembly, Func&lt;Type, bool&gt; predicate)<a class="headerlink" href="#gettypesofassemblyassembly-assembly-functype-bool-predicate" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the types of the specified assembly.</p>
<h4 id="parameters-5">Parameters<a class="headerlink" href="#parameters-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly.</p>
<p><strong>predicate</strong>
The predicate to use on the types.</p>
<h4 id="returns-5">Returns<a class="headerlink" href="#returns-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>All types of the specified assembly.</p>
<h3 id="gettypesprefilteredbyassemblyassembly-assembly-functype-bool-predicate-bool-allowinitialization">GetTypesPrefilteredByAssembly(Assembly assembly, Func&lt;Type, bool&gt; predicate, bool allowInitialization)<a class="headerlink" href="#gettypesprefilteredbyassemblyassembly-assembly-functype-bool-predicate-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the types prefiltered by assembly. If types must be retrieved from a single assembly only, this method is very fast.</p>
<h4 id="parameters-6">Parameters<a class="headerlink" href="#parameters-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
Name of the assembly.</p>
<p><strong>predicate</strong>
The predicate.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-6">Returns<a class="headerlink" href="#returns-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>System.Type[].</p>
<h3 id="gettypewithassemblystring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization">GetTypeWithAssembly(string typeName, string assemblyName, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypewithassemblystring-typename-string-assemblyname-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the specified type from the loaded assemblies.</p>
<h4 id="parameters-7">Parameters<a class="headerlink" href="#parameters-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeName</strong>
The name of the type including namespace.</p>
<p><strong>assemblyName</strong>
The name of the type including namespace.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-7">Returns<a class="headerlink" href="#returns-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or <code>null</code> if the type cannot be found.</p>
<h4 id="exceptions-3">Exceptions<a class="headerlink" href="#exceptions-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeName is <code>null</code> or whitespace.</p>
<h3 id="gettypewithoutassemblystring-typenamewithoutassembly-bool-ignorecase-bool-allowinitialization">GetTypeWithoutAssembly(string typeNameWithoutAssembly, bool ignoreCase, bool allowInitialization)<a class="headerlink" href="#gettypewithoutassemblystring-typenamewithoutassembly-bool-ignorecase-bool-allowinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the type without assembly. For example, when the value <code>Catel.TypeHelper</code> is used as parameter, the type for
    <code>Catel.TypeHelper, Catel.Core</code> will be returned.</p>
<h4 id="parameters-8">Parameters<a class="headerlink" href="#parameters-8" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>typeNameWithoutAssembly</strong>
The type name without assembly.</p>
<p><strong>ignoreCase</strong>
A value indicating whether the case should be ignored.</p>
<p><strong>allowInitialization</strong>
If set to <code>true</code>, allow initialization of the AppDomain if it hasn't happened yet. If <code>false</code>, deal with the types currently in the cache.</p>
<h4 id="returns-8">Returns<a class="headerlink" href="#returns-8" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The <a href="#">Type</a> or <code>null</code> if the type cannot be found.</p>
<h4 id="exceptions-4">Exceptions<a class="headerlink" href="#exceptions-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The typeNameWithoutAssembly is <code>null</code> or whitespace.</p>
<h4 id="remarks">Remarks<a class="headerlink" href="#remarks" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Note that this method can only support one type of &quot;simple type name&quot; resolving. For example, if &quot;Catel.TypeHelper&quot; is located in
    multiple assemblies, it will always use the latest known type for resolving the type.</p>
<h3 id="initializeassembliesienumerable-assemblies-bool-force-bool-allowmultithreadedinitialization">InitializeAssemblies(IEnumerable<Assembly> assemblies, bool force, bool allowMultithreadedInitialization)<a class="headerlink" href="#initializeassembliesienumerable-assemblies-bool-force-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="initializetypeassembly-assembly-type-type">InitializeType(Assembly assembly, Type type)<a class="headerlink" href="#initializetypeassembly-assembly-type-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="initializetypesassembly-assembly-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(Assembly assembly, bool forceFullInitialization, bool allowMultithreadedInitialization)<a class="headerlink" href="#initializetypesassembly-assembly-bool-forcefullinitialization-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the types in the specified assembly. It does this by looping through all loaded assemblies and
    registering the type by type name and assembly name.</p>
<pre><code>The types initialized by this method are used by GetType.
</code></pre>

<h4 id="parameters-9">Parameters<a class="headerlink" href="#parameters-9" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly to initialize the types from. If <code>null</code>, all assemblies will be checked.</p>
<p><strong>forceFullInitialization</strong>
If <code>true</code>, the types are initialized, even when the types are already initialized.</p>
<p><strong>allowMultithreadedInitialization</strong>
If <code>true</code>, allow multithreaded initialization. The default value is <code>false</code>.</p>
<h3 id="initializetypesstring-assemblyname-bool-forcefullinitialization-bool-allowmultithreadedinitialization">InitializeTypes(string assemblyName, bool forceFullInitialization, bool allowMultithreadedInitialization)<a class="headerlink" href="#initializetypesstring-assemblyname-bool-forcefullinitialization-bool-allowmultithreadedinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the types. It does this by looping through all loaded assemblies and
    registering the type by type name and assembly name.</p>
<pre><code>The types initialized by this method are used by GetType.
</code></pre>

<h4 id="parameters-10">Parameters<a class="headerlink" href="#parameters-10" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assemblyName</strong>
Name of the assembly. If <code>null</code>, all assemblies will be checked.</p>
<p><strong>forceFullInitialization</strong>
If <code>true</code>, the types are initialized, even when the types are already initialized.</p>
<p><strong>allowMultithreadedInitialization</strong>
If <code>true</code>, allow multithreaded initialization.</p>
<h4 id="exceptions-5">Exceptions<a class="headerlink" href="#exceptions-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentException</strong>
The assemblyName is <code>null</code> or whitespace.</p>
<h3 id="onassemblyloadedobject-sender-assemblyloadeventargs-args">OnAssemblyLoaded(object sender, AssemblyLoadEventArgs args)<a class="headerlink" href="#onassemblyloadedobject-sender-assemblyloadeventargs-args" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when an assembly is loaded in the current <a href="#">AppDomain</a>.</p>
<h4 id="parameters-11">Parameters<a class="headerlink" href="#parameters-11" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>args</strong>
The <a href="#">AssemblyLoadEventArgs</a> instance containing the event data.</p>
<h3 id="shouldignoreassemblyassembly-assembly">ShouldIgnoreAssembly(Assembly assembly)<a class="headerlink" href="#shouldignoreassemblyassembly-assembly" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Determines whether the specified assembly must be ignored by the type cache.</p>
<h4 id="parameters-12">Parameters<a class="headerlink" href="#parameters-12" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly.</p>
<h4 id="returns-9">Returns<a class="headerlink" href="#returns-9" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if the assembly should be ignored, <code>false</code> otherwise.</p>
<h3 id="shouldignoretypeassembly-assembly-type-type">ShouldIgnoreType(Assembly assembly, Type type)<a class="headerlink" href="#shouldignoretypeassembly-assembly-type-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Determines whether the specified type must be ignored by the type cache.</p>
<h4 id="parameters-13">Parameters<a class="headerlink" href="#parameters-13" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>assembly</strong>
The assembly.</p>
<p><strong>type</strong>
The type to check.</p>
<h4 id="true">Returns<a class="headerlink" href="#true" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if the type should be ignored, <code>false</code> otherwise.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/reference/Catel.Core/Catel/Reflection/TypeCache.md" target="_blank">contribute</a>!</p>
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../../../js/highlight.pack.js"></script>
    <script src="../../../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
