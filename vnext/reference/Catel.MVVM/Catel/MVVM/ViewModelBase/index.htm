<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>ViewModelBase - Catel documentation</title>
    <link rel="shortcut icon" href="../../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../../../../../index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../introduction/">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../faq/">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../setup-deployment/">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../getting-started/">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../examples/">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-core/">Catel.Core</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-mvvm/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-fody/">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../catel-resharper/">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../tips-tricks/">Tips & tricks</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/">API reference</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Core/">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.MVVM/">Catel.MVVM</a></span></li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.MVVM/Catel/">Catel</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/Android/">Android</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/">MVVM</a></span></li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Binding/">Binding</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingBase/">BindingBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingContext/">BindingContext</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingContextExtensions/">BindingContextExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingExtensions/">BindingExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingMode/">BindingMode</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingParty/">BindingParty</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/BindingPartyExtensions/">BindingPartyExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CancelingEventArgs/">CancelingEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CancellableEventArgs/">CancellableEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Command/">Command</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandBase/">CommandBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandBinding/">CommandBinding</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandCanceledEventArgs/">CommandCanceledEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandContainerBase/">CommandContainerBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandCreatedEventArgs/">CommandCreatedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandEventArgs/">CommandEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandExecutedEventArgs/">CommandExecutedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandHelper/">CommandHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandManager/">CommandManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandManagerWrapper/">CommandManagerWrapper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CommandProgressChangedEventArgs/">CommandProgressChangedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/CompositeCommand/">CompositeCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/DataContextSubscriptionMode/">DataContextSubscriptionMode</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/DataContextSubscriptionService/">DataContextSubscriptionService</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/DefaultViewModelToModelMappingConverter/">DefaultViewModelToModelMappingConverter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IAuthenticationProvider/">IAuthenticationProvider</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ICatelCommand/">ICatelCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ICatelTaskCommand/">ICatelTaskCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ICommandManager/">ICommandManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ICompositeCommand/">ICompositeCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IDataContextSubscriptionService/">IDataContextSubscriptionService</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ILocator/">ILocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/InvalidViewModelException/">InvalidViewModelException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IProgressNotifyableViewModel/">IProgressNotifyableViewModel</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IRelationalViewModel/">IRelationalViewModel</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ITaskProgressReport/">ITaskProgressReport</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IUrlLocator/">IUrlLocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewLocator/">IViewLocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModel/">IViewModel</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelCommandManager/">IViewModelCommandManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelContainer/">IViewModelContainer</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelExtensions/">IViewModelExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelFactory/">IViewModelFactory</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelFactoryExtensions/">IViewModelFactoryExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelLocator/">IViewModelLocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelLocatorExtensions/">IViewModelLocatorExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelManager/">IViewModelManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/IViewModelToModelConverter/">IViewModelToModelConverter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/LocatorBase/">LocatorBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ManagedViewModel/">ManagedViewModel</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModelAttribute/">ModelAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModelCleanUpMode/">ModelCleanUpMode</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModelErrorInfo/">ModelErrorInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModelInfo/">ModelInfo</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModelNotRegisteredException/">ModelNotRegisteredException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ModuleInitializer/">ModuleInitializer</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/NavigationViewModelBase/">NavigationViewModelBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ObjectExtensions/">ObjectExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ObjectToDisplayNameConverter/">ObjectToDisplayNameConverter</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ProgressiveTaskCommand/">ProgressiveTaskCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ProgressNotifyableViewModel/">ProgressNotifyableViewModel</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/PropertyNotFoundInModelException/">PropertyNotFoundInModelException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/SavingEventArgs/">SavingEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/TaskCommand/">TaskCommand</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/UrlLocator/">UrlLocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ValidationToViewModelAttribute/">ValidationToViewModelAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewHelper/">ViewHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewLocator/">ViewLocator</a>
</li>
<li class="tocentry current"><a class="current" href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelBase/">ViewModelBase</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#fields">Fields</a></li>
<li class="tocentry"><a href="#constructors">Constructors</a></li>
<li class="tocentry"><a href="#properties">Properties</a></li>
<li class="tocentry"><a href="#events">Events</a></li>
<li class="tocentry"><a href="#methods">Methods</a></li>
</ul>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelClosedEventArgs/">ViewModelClosedEventArgs</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelCommandManager/">ViewModelCommandManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelExtensions/">ViewModelExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelFactory/">ViewModelFactory</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelLocator/">ViewModelLocator</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelManager/">ViewModelManager</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelManagerExtensions/">ViewModelManagerExtensions</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelMetadata/">ViewModelMetadata</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelNotRegisteredException/">ViewModelNotRegisteredException</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelServiceHelper/">ViewModelServiceHelper</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelToModelAttribute/">ViewModelToModelAttribute</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelToModelConverterBase/">ViewModelToModelConverterBase</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelToModelMapping/">ViewModelToModelMapping</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelToModelMode/">ViewModelToModelMode</a>
</li>
<li class="tocentry"><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/WrongViewModelTypeException/">WrongViewModelTypeException</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Auditing/">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Converters/">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Navigation/">Navigation</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Properties/">Properties</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Providers/">Providers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Tasks/">Tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/MVVM/Views/">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/Properties/">Properties</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/Windows/">Windows</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/Catel/Xamarin/">Xamarin</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.MVVM/System/">System</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../../reference/Catel.Serialization.Json/">Catel.Serialization.Json</a></span>
</li>

</ul>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../../../Home.htm">Home</a></li> / <li><a href="../../../../../reference/index.htm">API reference</a></li> / <li><a href="../../../../../reference/Catel.MVVM/index.htm">Catel.MVVM</a></li> / <li><a href="../../../../../reference/Catel.MVVM/Catel/index.htm">Catel</a></li> / <li><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/index.htm">MVVM</a></li> / <li><a href="../../../../../reference/Catel.MVVM/Catel/MVVM/ViewModelBase/index.htm">ViewModelBase</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="viewmodelbase">ViewModelBase<a class="headerlink" href="#viewmodelbase" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Name</th>
	<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
	<td>Assembly</td>
	<td>Catel.MVVM</td>
</tr>
<tr>
	<td>Namespace</td>
	<td>Catel.MVVM</td>
</tr>
<tr>
	<td>Available on</td>
	<td>.NET Framework 4.5, .NET Framework 4.6, Portable Class Libraries, Windows 10.0 (Universal Apps), Xamarin - Android, Xamarin - iOS</td>
</tr>
</tbody>
</table>
<pre class="nocode">public abstract class ViewModelBase : IUniqueIdentifyable, IRelationalViewModel, ModelBase
</pre><p><strong>Base types</strong>
<a href="/Catel.Core\Catel\Data\ModelBase.htm">ModelBase</a></p>
<p><strong>Base types</strong></p>
<p><a href="/Catel.Core\Catel\IUniqueIdentifyable.htm">IUniqueIdentifyable</a>,<a href="/Catel.MVVM\Catel\MVVM\IRelationalViewModel.htm">IRelationalViewModel</a></p>
<p>View model base for MVVM implementations. This class is based on the <a href="#">ModelBase</a>, and supports all
    common interfaces used by WPF.</p>
<h4 id="remarks">Remarks<a class="headerlink" href="#remarks" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>This view model base does not add any services.</p>
<h2 id="fields">Fields<a class="headerlink" href="#fields" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="areviewmodelattributesintialized">_areViewModelAttributesIntialized<a class="headerlink" href="#areviewmodelattributesintialized" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Value indicating whether the view model attributes are initialized.</p>
<h3 id="childviewmodelshaveerrors">_childViewModelsHaveErrors<a class="headerlink" href="#childviewmodelshaveerrors" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Value to determine whether child view models have errors or not.</p>
<h3 id="dispatcherservice">_dispatcherService<a class="headerlink" href="#dispatcherservice" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The dispatcher service used to dispatch all calls.</p>
<h3 id="ignoremultiplemodelswarning">_ignoreMultipleModelsWarning<a class="headerlink" href="#ignoremultiplemodelswarning" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Value indicating whether the multiple modules warning should be ignored.</p>
<h3 id="ishandlingthrottlingnotifications">_isHandlingThrottlingNotifications<a class="headerlink" href="#ishandlingthrottlingnotifications" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>A value indicating whether throttling is currently being handled.</p>
<h3 id="isthrottlingenabled">_isThrottlingEnabled<a class="headerlink" href="#isthrottlingenabled" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>A value indicating whether throttling is enabled.</p>
<h3 id="isviewmodelinitialized">_isViewModelInitialized<a class="headerlink" href="#isviewmodelinitialized" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Value indicating whether the view model is already initialized via a call to InitializeViewModelAsync.</p>
<h3 id="metadata">_metaData<a class="headerlink" href="#metadata" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Dictionary containing the view model metadata of a view model type so it has to be calculated only once.</p>
<h3 id="modelerrorinfo">_modelErrorInfo<a class="headerlink" href="#modelerrorinfo" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Dictionary with data error info about a specific model.</p>
<h3 id="modellock">_modelLock<a class="headerlink" href="#modellock" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="modelobjects">_modelObjects<a class="headerlink" href="#modelobjects" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Dictionary of available models inside the view model.</p>
<h3 id="modelobjectsinfo">_modelObjectsInfo<a class="headerlink" href="#modelobjectsinfo" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Dictionary with info about the available models inside the view model.</p>
<h3 id="modelsdirtyflags">_modelsDirtyFlags<a class="headerlink" href="#modelsdirtyflags" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Value indicating whether the specified models are dirty.</p>
<h3 id="navigationcontext">_navigationContext<a class="headerlink" href="#navigationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="throttlinglockobject">_throttlingLockObject<a class="headerlink" href="#throttlinglockobject" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Lock object for throttling.</p>
<h3 id="throttlingqueue">_throttlingQueue<a class="headerlink" href="#throttlingqueue" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The properties queue used when throttling is enabled.</p>
<h3 id="throttlingrate">_throttlingRate<a class="headerlink" href="#throttlingrate" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The throttling rate.</p>
<h3 id="throttlingtimer">_throttlingTimer<a class="headerlink" href="#throttlingtimer" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The throttling timer.</p>
<h3 id="title">_title<a class="headerlink" href="#title" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The backing field for the title property.</p>
<h3 id="validationsummaries">_validationSummaries<a class="headerlink" href="#validationsummaries" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Dictionary of properties that are decorated with the <a href="#">ValidationToViewModelAttribute</a>. These properties should be
    updated after each validation sequence.</p>
<h3 id="validationsummariesupdatestamps">_validationSummariesUpdateStamps<a class="headerlink" href="#validationsummariesupdatestamps" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>A date/time with the latest update stamp of each validation summary.</p>
<h3 id="viewmodeltomodelmap">_viewModelToModelMap<a class="headerlink" href="#viewmodeltomodelmap" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Mappings from view model properties to models and their properties.</p>
<h3 id="childviewmodels">ChildViewModels<a class="headerlink" href="#childviewmodels" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>List of child view models which can be registed by the <code>RegisterChildViewModel</code> method.</p>
<h3 id="log">Log<a class="headerlink" href="#log" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>The log.</p>
<h3 id="viewmodelmanager">ViewModelManager<a class="headerlink" href="#viewmodelmanager" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the view model manager.</p>
<h2 id="constructors">Constructors<a class="headerlink" href="#constructors" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="viewmodelbase-1">ViewModelBase()<a class="headerlink" href="#viewmodelbase-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes static members of the <a href="#">ViewModelBase</a> class.</p>
<h3 id="viewmodelbase-2">ViewModelBase()<a class="headerlink" href="#viewmodelbase-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes a new instance of the <a href="#">ViewModelBase</a> class.</p>
<h4 id="exceptions">Exceptions<a class="headerlink" href="#exceptions" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:Catel.MVVM.ModelNotRegisteredException</strong>
A mapped model is not registered.</p>
<p><strong>T:Catel.MVVM.PropertyNotFoundInModelException</strong>
A mapped model property is not found.</p>
<h3 id="viewmodelbaseiservicelocator-servicelocator-bool-supportieditableobject-bool-ignoremultiplemodelswarning-bool-skipviewmodelattributesinitialization">ViewModelBase(IServiceLocator serviceLocator, bool supportIEditableObject, bool ignoreMultipleModelsWarning, bool skipViewModelAttributesInitialization)<a class="headerlink" href="#viewmodelbaseiservicelocator-servicelocator-bool-supportieditableobject-bool-ignoremultiplemodelswarning-bool-skipviewmodelattributesinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes a new instance of the <a href="#">ViewModelBase</a> class.</p>
<pre><code>This constructor allows the injection of a custom [IServiceLocator](#).
</code></pre>

<h4 id="parameters">Parameters<a class="headerlink" href="#parameters" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>serviceLocator</strong>
The service locator to inject. If <code>null</code>, the Default will be used.</p>
<p><strong>supportIEditableObject</strong>
if set to <code>true</code>, the view model will natively support models that
    implement the <a href="#">IEditableObject</a> interface.</p>
<p><strong>ignoreMultipleModelsWarning</strong>
if set to <code>true</code>, the warning when using multiple models is ignored.</p>
<p><strong>skipViewModelAttributesInitialization</strong>
if set to <code>true</code>, the initialization will be skipped and must be done manually via InitializeViewModelAttributes.</p>
<h4 id="exceptions-1">Exceptions<a class="headerlink" href="#exceptions-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:Catel.MVVM.ModelNotRegisteredException</strong>
A mapped model is not registered.</p>
<p><strong>T:Catel.MVVM.PropertyNotFoundInModelException</strong>
A mapped model property is not found.</p>
<h3 id="viewmodelbasebool-supportieditableobject-bool-ignoremultiplemodelswarning-bool-skipviewmodelattributesinitialization">ViewModelBase(bool supportIEditableObject, bool ignoreMultipleModelsWarning, bool skipViewModelAttributesInitialization)<a class="headerlink" href="#viewmodelbasebool-supportieditableobject-bool-ignoremultiplemodelswarning-bool-skipviewmodelattributesinitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes a new instance of the <a href="#">ViewModelBase</a> class.</p>
<h4 id="parameters-1">Parameters<a class="headerlink" href="#parameters-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>supportIEditableObject</strong>
if set to <code>true</code>, the view model will natively support models that
    implement the <a href="#">IEditableObject</a> interface.</p>
<p><strong>ignoreMultipleModelsWarning</strong>
if set to <code>true</code>, the warning when using multiple models is ignored.</p>
<p><strong>skipViewModelAttributesInitialization</strong>
if set to <code>true</code>, the initialization will be skipped and must be done manually via InitializeViewModelAttributes.</p>
<h4 id="exceptions-2">Exceptions<a class="headerlink" href="#exceptions-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:Catel.MVVM.ModelNotRegisteredException</strong>
A mapped model is not registered.</p>
<p><strong>T:Catel.MVVM.PropertyNotFoundInModelException</strong>
A mapped model property is not found.</p>
<h2 id="properties">Properties<a class="headerlink" href="#properties" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="defervalidationuntilfirstsavecall">DeferValidationUntilFirstSaveCall<a class="headerlink" href="#defervalidationuntilfirstsavecall" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets a value indicating whether all validation should be deferred until the first call to SaveViewModelAsync.</p>
<pre><code>If this value is ```true```, all validation will be suspended. As soon as the first call is made to the SaveViewModelAsync,
the validation will no longer be suspended and activated.



The default value is ```false```.
</code></pre>

<h4 id="remarks-1">Remarks<a class="headerlink" href="#remarks-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>If this value is used, it must be set as first property in the view model because the validation kicks in immediately
    when properties change.</p>
<h3 id="dependencyresolver">DependencyResolver<a class="headerlink" href="#dependencyresolver" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the dependency resolver.</p>
<h3 id="dispatchpropertychangedevent">DispatchPropertyChangedEvent<a class="headerlink" href="#dispatchpropertychangedevent" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets a value indicating whether the AdvancedPropertyChangedEventArgs) will be dispatched using
    the <a href="#">IDispatcherService</a>.</p>
<pre><code>The default value is ```false```.
</code></pre>

<h3 id="hasdirtymodel">HasDirtyModel<a class="headerlink" href="#hasdirtymodel" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this instance has a dirty model.</p>
<h3 id="haserrors">HasErrors<a class="headerlink" href="#haserrors" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this object contains any field or business errors.</p>
<h3 id="invalidatecommandsonpropertychanged">InvalidateCommandsOnPropertyChanged<a class="headerlink" href="#invalidatecommandsonpropertychanged" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets a value indicating whether the commands should automatically be invalidated on a property change.</p>
<pre><code>If this property is ```false```, properties should either be invalidated by the .NET Framework or by a manual
call to the Boolean) method.
</code></pre>

<h3 id="iscanceling">IsCanceling<a class="headerlink" href="#iscanceling" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this instance is currently canceling.</p>
<h3 id="isclosed">IsClosed<a class="headerlink" href="#isclosed" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this instance is closed. If a view model is closed, calling
    CancelViewModelAsync, SaveViewModelAsync or Boolean})
    will have no effect.</p>
<h3 id="isclosing">IsClosing<a class="headerlink" href="#isclosing" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this instance is closing.</p>
<h3 id="issaving">IsSaving<a class="headerlink" href="#issaving" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets a value indicating whether this instance is currently saving.</p>
<h3 id="navigationcontext-1">NavigationContext<a class="headerlink" href="#navigationcontext-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the navigation context.</p>
<h4 id="remarks-2">Remarks<a class="headerlink" href="#remarks-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Note that the navigation contexts is first available in the OnNavigationCompleted method, 
    not in the constructor.</p>
<h3 id="parentviewmodel">ParentViewModel<a class="headerlink" href="#parentviewmodel" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the parent view model.</p>
<h3 id="supportieditableobject">SupportIEditableObject<a class="headerlink" href="#supportieditableobject" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets a value indicating whether models that implement <a href="#">IEditableObject</a> are supported correctly.</p>
<h3 id="throttlingrate-1">ThrottlingRate<a class="headerlink" href="#throttlingrate-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets the throttling rate.</p>
<pre><code>When throttling is enabled, the view model will raise property changed event in a timely manner to
reduce the number of updates the view has to do based on the properties.
</code></pre>

<h3 id="title-1">Title<a class="headerlink" href="#title-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the title of the view model.</p>
<h3 id="uniqueidentifier">UniqueIdentifier<a class="headerlink" href="#uniqueidentifier" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the unique identifier of the view model.</p>
<h3 id="validatemodelsoninitialization">ValidateModelsOnInitialization<a class="headerlink" href="#validatemodelsoninitialization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets or sets a value indicating whether to validate the models as soon as they are initialized. This means that
    as soon as a model value is set, the view model checks whether the entity already contains errors.</p>
<pre><code>If this value is ```true```, the errors will immediately be returned for mappings on the model. Otherwise, the errors
will only become available when a value is entered and then being undone.



The default value is ```true```.
</code></pre>

<h3 id="viewmodelcommandmanager">ViewModelCommandManager<a class="headerlink" href="#viewmodelcommandmanager" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the ViewModelCommandManager of this view model.</p>
<h3 id="viewmodelconstructiontime">ViewModelConstructionTime<a class="headerlink" href="#viewmodelconstructiontime" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the view model construction time, which is used to get unique instances of view models.</p>
<h2 id="events">Events<a class="headerlink" href="#events" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="canceledasync">CanceledAsync<a class="headerlink" href="#canceledasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurrs when the view model is canceled.</p>
<h3 id="cancelingasync">CancelingAsync<a class="headerlink" href="#cancelingasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model is about to be canceled.</p>
<h3 id="closedasync">ClosedAsync<a class="headerlink" href="#closedasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model has just been closed.</p>
<h3 id="closingasync">ClosingAsync<a class="headerlink" href="#closingasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model is being closed.</p>
<h3 id="commandexecutedasync">CommandExecutedAsync<a class="headerlink" href="#commandexecutedasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when a command on the view model has been executed.</p>
<h3 id="initializedasync">InitializedAsync<a class="headerlink" href="#initializedasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model has been initialized.</p>
<h3 id="navigationcompleted">NavigationCompleted<a class="headerlink" href="#navigationcompleted" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the navigation is completed.</p>
<h4 id="remarks-3">Remarks<a class="headerlink" href="#remarks-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>This should of course be a cleaner solution, but there is no other way to let a view-model
    know that navigation has completed. Another option is injection, but this would require every
    view-model for Windows Phone 7 to accept only the navigation context, which has actually nothing
    to do with the logic.</p>
<pre><code>It is also possible to use the OnNavigationCompleted event.
</code></pre>

<h3 id="savedasync">SavedAsync<a class="headerlink" href="#savedasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model is saved successfully.</p>
<h3 id="savingasync">SavingAsync<a class="headerlink" href="#savingasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Occurs when the view model is about to be saved.</p>
<h2 id="methods">Methods<a class="headerlink" href="#methods" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="cancelasync">CancelAsync()<a class="headerlink" href="#cancelasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cancels the editing of the data.</p>
<h4 id="returns">Returns<a class="headerlink" href="#returns" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if successful; otherwise <code>false</code>.</p>
<h3 id="cancelviewmodelasync">CancelViewModelAsync()<a class="headerlink" href="#cancelviewmodelasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Cancels the editing of the data.</p>
<h4 id="returns-1">Returns<a class="headerlink" href="#returns-1" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if successful; otherwise <code>false</code>.</p>
<h3 id="closeasync">CloseAsync()<a class="headerlink" href="#closeasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Closes this instance. Always called after the CancelAsync of SaveAsync method.</p>
<h3 id="closeviewmodelasyncnullable-result">CloseViewModelAsync(Nullable<bool> result)<a class="headerlink" href="#closeviewmodelasyncnullable-result" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Closes this instance. Always called after the CancelAsync of SaveAsync method.</p>
<h4 id="parameters-2">Parameters<a class="headerlink" href="#parameters-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>result</strong>
The result to pass to the view. This will, for example, be used as <code>DialogResult</code>.</p>
<h3 id="createviewmodelmetadatatype-viewmodeltype">CreateViewModelMetaData(Type viewModelType)<a class="headerlink" href="#createviewmodelmetadatatype-viewmodeltype" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="getallmodels">GetAllModels()<a class="headerlink" href="#getallmodels" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets all models that are decorated with the <a href="#">ModelAttribute</a>.</p>
<h4 id="returns-2">Returns<a class="headerlink" href="#returns-2" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>Array of models.</p>
<h3 id="getchildviewmodels">GetChildViewModels()<a class="headerlink" href="#getchildviewmodels" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Gets the child view models of this view model.</p>
<h4 id="returns-3">Returns<a class="headerlink" href="#returns-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>An enumerable of current child view models.</p>
<h3 id="getviewmodelmetadatatype-viewmodeltype">GetViewModelMetaData(Type viewModelType)<a class="headerlink" href="#getviewmodelmetadatatype-viewmodeltype" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the view model meta data.</p>
<pre><code>This method only initializes the meta data once per view model type. If a type is already initialized,
this method will immediately return.
</code></pre>

<h4 id="parameters-3">Parameters<a class="headerlink" href="#parameters-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>viewModelType</strong>
Type of the view model.</p>
<h4 id="returns-4">Returns<a class="headerlink" href="#returns-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>ViewModelMetadata.</p>
<h4 id="exceptions-3">Exceptions<a class="headerlink" href="#exceptions-3" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentNullException</strong>
The viewModelType is <code>null</code>.</p>
<h3 id="initializeasync">InitializeAsync()<a class="headerlink" href="#initializeasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the view model. Normally the initialization is done in the constructor, but sometimes this must be delayed
    to a state where the associated UI element (user control, window, ...) is actually loaded.</p>
<pre><code>This method is called as soon as the associated UI element is loaded.
</code></pre>

<h4 id="remarks-4">Remarks<a class="headerlink" href="#remarks-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>It's not recommended to implement the initialization of properties in this method. The initialization of properties
    should be done in the constructor. This method should be used to start the retrieval of data from a web service or something
    similar.</p>
<pre><code>During unit tests, it is recommended to manually call this method because there is no external container calling this method.
</code></pre>

<h3 id="initializemodelstring-modelproperty-object-model">InitializeModel(string modelProperty, object model)<a class="headerlink" href="#initializemodelstring-modelproperty-object-model" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when a model initialized.</p>
<h4 id="parameters-4">Parameters<a class="headerlink" href="#parameters-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>modelProperty</strong>
The name of the model property.</p>
<p><strong>model</strong>
The model.</p>
<h3 id="initializemodelinternalstring-modelproperty-object-model">InitializeModelInternal(string modelProperty, object model)<a class="headerlink" href="#initializemodelinternalstring-modelproperty-object-model" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes a model by subscribing to all events.</p>
<h4 id="parameters-5">Parameters<a class="headerlink" href="#parameters-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>modelProperty</strong>
The name of the model property.</p>
<p><strong>model</strong>
The model.</p>
<h3 id="initializepropertieswithattributes">InitializePropertiesWithAttributes()<a class="headerlink" href="#initializepropertieswithattributes" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the properties with attributes.</p>
<h3 id="initializethrottling">InitializeThrottling()<a class="headerlink" href="#initializethrottling" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="initializeviewmodelasync">InitializeViewModelAsync()<a class="headerlink" href="#initializeviewmodelasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the view model. Normally the initialization is done in the constructor, but sometimes this must be delayed
    to a state where the associated UI element (user control, window, ...) is actually loaded.</p>
<pre><code>This method is called as soon as the associated UI element is loaded.
</code></pre>

<h4 id="returns-5">Returns<a class="headerlink" href="#returns-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>The task.</p>
<h4 id="remarks-5">Remarks<a class="headerlink" href="#remarks-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>It's not recommended to implement the initialization of properties in this method. The initialization of properties
    should be done in the constructor. This method should be used to start the retrieval of data from a web service or something
    similar.</p>
<pre><code>During unit tests, it is recommended to manually call this method because there is no external container calling this method.
</code></pre>

<h3 id="initializeviewmodelattributes">InitializeViewModelAttributes()<a class="headerlink" href="#initializeviewmodelattributes" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Initializes the view model attributes, such as the <a href="#">ModelAttribute</a> and
    <a href="#">ViewModelToModelAttribute</a>.</p>
<pre><code>This method is automatically invoked by the constructor. Sometimes, dynamic properties
are registered after the constructor. Therefore, it is possible to skip the initialization
of the attributes and handle this manually.
</code></pre>

<h4 id="exceptions-4">Exceptions<a class="headerlink" href="#exceptions-4" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:Catel.MVVM.ModelNotRegisteredException</strong>
A mapped model is not registered.</p>
<p><strong>T:Catel.MVVM.PropertyNotFoundInModelException</strong>
A mapped model property is not found.</p>
<h3 id="ismodelregisteredstring-name">IsModelRegistered(string name)<a class="headerlink" href="#ismodelregisteredstring-name" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Determines whether a specific property is registered as a model.</p>
<h4 id="parameters-6">Parameters<a class="headerlink" href="#parameters-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>name</strong>
The name of the registered model.</p>
<h4 id="returns-6">Returns<a class="headerlink" href="#returns-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if a specific property is registered as a model; otherwise, <code>false</code>.</p>
<h3 id="onchildviewmodelclosedasyncobject-sender-eventargs-e">OnChildViewModelClosedAsync(object sender, EventArgs e)<a class="headerlink" href="#onchildviewmodelclosedasyncobject-sender-eventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the child view model is closed.</p>
<h4 id="parameters-7">Parameters<a class="headerlink" href="#parameters-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>e</strong>
The <a href="#">EventArgs</a> instance containing the event data.</p>
<h3 id="true">OnChildViewModelPropertyChanged(object sender, PropertyChangedEventArgs e)<a class="headerlink" href="#true" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when a property has changed on the child view model.</p>
<h4 id="parameters-8">Parameters<a class="headerlink" href="#parameters-8" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>e</strong>
The <a href="#">PropertyChangedEventArgs</a> instance containing the event data.</p>
<h3 id="onclosedasyncnullable-result">OnClosedAsync(Nullable<bool> result)<a class="headerlink" href="#onclosedasyncnullable-result" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the view model has just been closed.</p>
<pre><code>This method also raises the ClosedAsync event.
</code></pre>

<h4 id="parameters-9">Parameters<a class="headerlink" href="#parameters-9" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>result</strong>
The result to pass to the view. This will, for example, be used as <code>DialogResult</code>.</p>
<h3 id="onclosingasync">OnClosingAsync()<a class="headerlink" href="#onclosingasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the view model is about to be closed.</p>
<pre><code>This method also raises the ClosingAsync event.
</code></pre>

<h3 id="onmodelerrorinfoupdatedobject-sender-eventargs-e">OnModelErrorInfoUpdated(object sender, EventArgs e)<a class="headerlink" href="#onmodelerrorinfoupdatedobject-sender-eventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the Updated event occurs.</p>
<h4 id="parameters-10">Parameters<a class="headerlink" href="#parameters-10" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>e</strong>
The <a href="#">EventArgs</a> instance containing the event data.</p>
<h3 id="onmodelpropertychangedobject-sender-propertychangedeventargs-e">OnModelPropertyChanged(object sender, PropertyChangedEventArgs e)<a class="headerlink" href="#onmodelpropertychangedobject-sender-propertychangedeventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when a property on one of the registered models has changed.</p>
<h4 id="parameters-11">Parameters<a class="headerlink" href="#parameters-11" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>e</strong>
The <a href="#">PropertyChangedEventArgs</a> instance containing the event data.</p>
<h4 id="remarks-6">Remarks<a class="headerlink" href="#remarks-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>This method will also raise for properties that are not mapped on the view model.</p>
<h3 id="onmodelpropertychangedinternalobject-sender-propertychangedeventargs-e">OnModelPropertyChangedInternal(object sender, PropertyChangedEventArgs e)<a class="headerlink" href="#onmodelpropertychangedinternalobject-sender-propertychangedeventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Handles the PropertyChanged event of a Model.</p>
<h4 id="parameters-12">Parameters<a class="headerlink" href="#parameters-12" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The source of the event.</p>
<p><strong>e</strong>
The <a href="#">PropertyChangedEventArgs</a> instance containing the event data.</p>
<h3 id="onnavigationcompleted">OnNavigationCompleted()<a class="headerlink" href="#onnavigationcompleted" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the navigation has completed.</p>
<h4 id="remarks-7">Remarks<a class="headerlink" href="#remarks-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>This should of course be a cleaner solution, but there is no other way to let a view-model
    know that navigation has completed. Another option is injection, but this would require every
    view-model for Windows Phone 7 to accept only the navigation context, which has actually nothing
    to do with the logic.</p>
<pre><code>It is also possible to use the NavigationCompleted event.
</code></pre>

<h3 id="onpropertychangedadvancedpropertychangedeventargs-e">OnPropertyChanged(AdvancedPropertyChangedEventArgs e)<a class="headerlink" href="#onpropertychangedadvancedpropertychangedeventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when a property value has changed.</p>
<h4 id="parameters-13">Parameters<a class="headerlink" href="#parameters-13" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>e</strong>
The <a href="#">AdvancedPropertyChangedEventArgs</a> instance containing the event data.</p>
<h3 id="onthrottlingtimertick">OnThrottlingTimerTick()<a class="headerlink" href="#onthrottlingtimertick" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the throttling timer ticks.</p>
<h3 id="onvalidatedivalidationcontext-validationcontext">OnValidated(IValidationContext validationContext)<a class="headerlink" href="#onvalidatedivalidationcontext-validationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the object is validated.</p>
<h4 id="parameters-14">Parameters<a class="headerlink" href="#parameters-14" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>validationContext</strong>
The validation context.</p>
<h3 id="onvalidatingivalidationcontext-validationcontext">OnValidating(IValidationContext validationContext)<a class="headerlink" href="#onvalidatingivalidationcontext-validationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the object is validating.</p>
<h4 id="parameters-15">Parameters<a class="headerlink" href="#parameters-15" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>validationContext</strong>
The validation context.</p>
<h3 id="onvalidatingbusinessrulesivalidationcontext-validationcontext">OnValidatingBusinessRules(IValidationContext validationContext)<a class="headerlink" href="#onvalidatingbusinessrulesivalidationcontext-validationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the object is validating the business rules.</p>
<h4 id="parameters-16">Parameters<a class="headerlink" href="#parameters-16" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>validationContext</strong>
The validation context.</p>
<h3 id="onvalidatingfieldsivalidationcontext-validationcontext">OnValidatingFields(IValidationContext validationContext)<a class="headerlink" href="#onvalidatingfieldsivalidationcontext-validationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when the object is validating the fields.</p>
<h4 id="parameters-17">Parameters<a class="headerlink" href="#parameters-17" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>validationContext</strong>
The validation context.</p>
<h3 id="raisepropertychangedobject-sender-advancedpropertychangedeventargs-e">RaisePropertyChanged(object sender, AdvancedPropertyChangedEventArgs e)<a class="headerlink" href="#raisepropertychangedobject-sender-advancedpropertychangedeventargs-e" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Raises the PropertyChanged event.</p>
<pre><code>This is the one and only method that actually raises the PropertyChanged event. All other
methods are (and should be) just overloads that eventually call this method.
</code></pre>

<h4 id="parameters-18">Parameters<a class="headerlink" href="#parameters-18" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>sender</strong>
The sender.</p>
<p><strong>e</strong>
The <a href="#">PropertyChangedEventArgs</a> instance containing the event data.</p>
<h3 id="registerviewmodelservicesiservicelocator-servicelocator">RegisterViewModelServices(IServiceLocator serviceLocator)<a class="headerlink" href="#registerviewmodelservicesiservicelocator-servicelocator" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Registers the default view model services.</p>
<h4 id="parameters-19">Parameters<a class="headerlink" href="#parameters-19" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>serviceLocator</strong>
The service locator.</p>
<h4 id="exceptions-5">Exceptions<a class="headerlink" href="#exceptions-5" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentNullException</strong>
The serviceLocator is <code>null</code>.</p>
<h3 id="resetmodelstring-modelproperty-modelcleanupmode-modelcleanupmode">ResetModel(string modelProperty, ModelCleanUpMode modelCleanUpMode)<a class="headerlink" href="#resetmodelstring-modelproperty-modelcleanupmode-modelcleanupmode" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Resets the model by calling uninitializing and initializing the model again. This means that if the model
    supports 
    <a href="#">IEditableObject</a>, it will be reset.</p>
<h4 id="parameters-20">Parameters<a class="headerlink" href="#parameters-20" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>modelProperty</strong>
The model property.</p>
<p><strong>modelCleanUpMode</strong>
The model clean up mode.</p>
<h4 id="exceptions-6">Exceptions<a class="headerlink" href="#exceptions-6" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:System.ArgumentNullException</strong>
The modelProperty is <code>null</code>.</p>
<h3 id="saveasync">SaveAsync()<a class="headerlink" href="#saveasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Saves the data.</p>
<h4 id="returns-7">Returns<a class="headerlink" href="#returns-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if successful; otherwise <code>false</code>.</p>
<h3 id="saveviewmodelasync">SaveViewModelAsync()<a class="headerlink" href="#saveviewmodelasync" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Saves the data.</p>
<h4 id="returns-8">Returns<a class="headerlink" href="#returns-8" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if successful; otherwise <code>false</code>.</p>
<h3 id="tostring">ToString()<a class="headerlink" href="#tostring" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Converts the object to a string.</p>
<h4 id="returns-9">Returns<a class="headerlink" href="#returns-9" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>System.String.</p>
<h3 id="uninitializemodelstring-modelproperty-object-model-modelcleanupmode-modelcleanupmode">UninitializeModel(string modelProperty, object model, ModelCleanUpMode modelCleanUpMode)<a class="headerlink" href="#uninitializemodelstring-modelproperty-object-model-modelcleanupmode-modelcleanupmode" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Called when a model uninitialized.</p>
<h4 id="parameters-21">Parameters<a class="headerlink" href="#parameters-21" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>modelProperty</strong>
The name of the model property.</p>
<p><strong>model</strong>
The model.</p>
<p><strong>modelCleanUpMode</strong>
The model clean up mode.</p>
<h3 id="uninitializemodelinternalstring-modelproperty-object-model-modelcleanupmode-modelcleanupmode">UninitializeModelInternal(string modelProperty, object model, ModelCleanUpMode modelCleanUpMode)<a class="headerlink" href="#uninitializemodelinternalstring-modelproperty-object-model-modelcleanupmode-modelcleanupmode" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Uninitializes a model by unsubscribing from all events.</p>
<h4 id="true">Parameters<a class="headerlink" href="#true" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>modelProperty</strong>
The name of the model property.</p>
<p><strong>model</strong>
The model.</p>
<p><strong>modelCleanUpMode</strong>
The model clean up mode.</p>
<h3 id="uninitializethrottling">UninitializeThrottling()<a class="headerlink" href="#uninitializethrottling" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<h3 id="updateexplicitviewmodeltomodelmappings">UpdateExplicitViewModelToModelMappings()<a class="headerlink" href="#updateexplicitviewmodeltomodelmappings" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Updates the view model to model mappings that are defined as Explicit.</p>
<h3 id="updatenavigationcontextnavigationcontext-navigationcontext">UpdateNavigationContext(NavigationContext navigationContext)<a class="headerlink" href="#updatenavigationcontextnavigationcontext-navigationcontext" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Updates the navigation context. The navigation context provided by this class is different
    from the NavigationContext. Therefore, this method updates the navigation context
    to match it to the values of the navigationContext.</p>
<h4 id="parameters-22">Parameters<a class="headerlink" href="#parameters-22" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>navigationContext</strong>
The navigation context.</p>
<h3 id="validateviewmodelbool-force-bool-notifychangedpropertiesonly">ValidateViewModel(bool force, bool notifyChangedPropertiesOnly)<a class="headerlink" href="#validateviewmodelbool-force-bool-notifychangedpropertiesonly" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Validates the specified notify changed properties only.</p>
<h4 id="parameters-23">Parameters<a class="headerlink" href="#parameters-23" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>force</strong>
If set to <code>true</code>, a validation is forced (even if the object knows it is already validated).</p>
<p><strong>notifyChangedPropertiesOnly</strong>
if set to <code>true</code> only the properties for which the warnings or errors have been changed
    will be updated via PropertyChanged; otherwise all the properties that
    had warnings or errors but not anymore and properties still containing warnings or errors will be updated.</p>
<h4 id="returns-10">Returns<a class="headerlink" href="#returns-10" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><code>true</code> if validation succeeds; otherwise <code>false</code>.</p>
<h4 id="remarks-8">Remarks<a class="headerlink" href="#remarks-8" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p>This method is useful when the view model is initialized before the window, and therefore WPF does not update the errors and warnings.</p>
<h3 id="validateviewmodeltomodelmappings">ValidateViewModelToModelMappings()<a class="headerlink" href="#validateviewmodeltomodelmappings" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Validates the view model to model mappings.</p>
<h4 id="exceptions-7">Exceptions<a class="headerlink" href="#exceptions-7" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h4>
<p><strong>T:Catel.MVVM.ModelNotRegisteredException</strong>
A property is mapped to a model that does not exists.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/reference/Catel.MVVM/Catel/MVVM/ViewModelBase.md" target="_blank">contribute</a>!</p>
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../../../js/highlight.pack.js"></script>
    <script src="../../../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
