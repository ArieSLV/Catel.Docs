<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Window and DataWindow - Catel documentation</title>
    <link rel="shortcut icon" href="../../../favicon.ico">
    <link rel="stylesheet" href="../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelCore.htm">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../CatelMVVM.htm">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Auditing.htm">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Behaviors&triggers.htm">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Bindings.htm">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Commands&events.htm">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Converters.htm">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Designers.htm">Designers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Locators&namingconventions.htm">Locators & naming conventions</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Services.htm">Services</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Viewmodels.htm">View models</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../Views.htm">Views</a></span></li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../XAML.htm">XAML</a></span></li>
<li class="tocentry current"><a class="current" href="../../../catel-mvvm/views/xaml/window-and-datawindow.htm">Window and DataWindow</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#introduction-to-the-window">Introduction to the Window</a></li>
<li class="tocentry"><a href="#introduction-to-the-datawindow">Introduction to the DataWindow</a></li>
<li class="tocentry"><a href="#using-the-datawindow-in-mvvm">Using the DataWindow in MVVM</a></li>
<li class="tocentry"><a href="#construction-of-view-models">Construction of view models</a></li>
<li class="tocentry"><a href="#automatic-validation">Automatic validation</a></li>
<li class="tocentry"><a href="#customizing-the-buttons">Customizing the buttons</a></li>
<li class="tocentry"><a href="#styling-the-datawindow">Styling the DataWindow</a></li>
<li class="tocentry"><a href="#closing-the-datawindow-with-the-escape-key">Closing the DataWindow with the Escape key</a></li>
</ul>
<li class="tocentry"><a href="../../../catel-mvvm/views/xaml/usercontrol.htm">UserControl</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/views/xaml/usercontrol-resources.htm">UserControl Resources</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/views/xaml/validation-controls.htm">Validation controls</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/views/xaml/customizing-datacontext-subscription-behavior.htm">Customizing DataContext subscription behavior</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/views/xaml/improving-performance-by-defining-view-model-grid-manually.htm">Improving performance by defining the view model grid manually</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Externalcontrols.htm">External controls</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Advanced.htm">Advanced</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../XamarinForms.htm">Xamarin.Forms</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../XamarinAndroid.htm">Xamarin.Android</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../XamariniOS.htm">Xamarin.iOS</a></span>
</li>

</ul>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelFody.htm">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelReSharper.htm">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../Home.htm">Home</a></li> / <li><a href="../../../CatelMVVM.htm">Catel.MVVM</a></li> / <li><a href="../../../Views.htm">Views</a></li> / <li><a href="../../../XAML.htm">XAML</a></li> / <li><a href="../../../catel-mvvm/views/xaml/window-and-datawindow.htm">Window and DataWindow</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="window-and-datawindow">Window and DataWindow<a class="headerlink" href="#window-and-datawindow" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<h2 id="introduction-to-the-window">Introduction to the Window<a class="headerlink" href="#introduction-to-the-window" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The Window is a simplified class representing the same logic as the regular System.Windows.Window but with the binding support of Catel.</p>
<h2 id="introduction-to-the-datawindow">Introduction to the DataWindow<a class="headerlink" href="#introduction-to-the-datawindow" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>When developing software in XAML, most developers always need the following three types of windows:</p>
<ul>
<li>OK / Cancel buttons for data windows;</li>
<li>OK / Cancel / Apply buttons for application settings / options;</li>
<li>Close button on windows for action windows.</li>
</ul>
<p>Creating these windows is just boring and the steps are always the same:</p>
<p>The <code>DataWindow</code> class makes it much easier to create these basic windows, simply by specifying the mode of the <em>Window</em>. By using this window, you can concentrate on the actual implementation and you don’t have to worry about the implementation of the buttons itself, which saves you time! </p>
<h2 id="using-the-datawindow-in-mvvm">Using the DataWindow in MVVM<a class="headerlink" href="#using-the-datawindow-in-mvvm" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The easiest object to use with the MVVM Framework is the <code>DataWindow</code> class. The <code>DataWindow</code> takes fully care of the construction of the view models and the validation of the view models.</p>
<p>The usage of the <code>DataWindow</code> class is very simple, once you know how to do it. First of all, you will have to specify the base class in the xaml file like shown below:</p>
<pre class="nocode">&lt;catel:DataWindow x:Class=&quot;Catel.Articles._03___MVVM.Examples.DataWindow.PersonWindow&quot;
                  xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
                  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
                  xmlns:catel=&quot;http://catel.codeplex.com&quot;&gt;
    
    &lt;!-- Content left out for the sake of simplicity --&gt;
    
&lt;/catel:DataWindow&gt;
</pre><p>As you can see, one thing has changed in regard to a “normal” window definition:</p>
<ol>
<li>The type definition has changed from <code>Window</code> to <code>catel:DataWindow</code>;</li>
</ol>
<p>The code-behind is even simpler:</p>
<pre class="nocode">/// &lt;summary&gt;
/// Interaction logic for PersonWindow.xaml
/// &lt;/summary&gt;
public partial class PersonWindow : DataWindow
{
    /// &lt;summary&gt;
    /// Initializes a new instance of the &lt;see cref=&quot;PersonWindow&quot;/&gt; class.
    /// &lt;/summary&gt;
    /// &lt;param name=&quot;viewModel&quot;&gt;The view model.&lt;/param&gt;
    public PersonWindow(PersonViewModel viewModel)
        : base(viewModel)
    {
        InitializeComponent();
    }
}
</pre><p>The code above is everything you will need when using the MVVM Framework of Catel. </p>
<p>The easiest way to create a new <code>DataWindow</code> is to use item templates</p>
<h2 id="construction-of-view-models">Construction of view models<a class="headerlink" href="#construction-of-view-models" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>There are multiple ways to construct a window with a view model. There are three options that you have to construct a view model:</p>
<ul>
<li>
<strong>Constructor with view model</strong>
This is the best option you can use. This way, it is possible to inject view models into the data window.
</li>
<li>
<strong>Constructor with model</strong>
It is possible to save a developer from creating a view model manually by accepting a model as input. Then, the data window will have to construct the view model manually and pass it through to its base constructor.
</li>
<li>
<strong>Empty constructor</strong>
If you use an empty constructor, the developer will have to set the data context manually. This something you really should avoid. But hey, it’s all up to you.
</li>
</ul>
<h2 id="automatic-validation">Automatic validation<a class="headerlink" href="#automatic-validation" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The cool thing about the <code>DataWindow</code> is that it automatically wraps the content that a developer defines into an <code>InfoBarMessageControl</code>. This way, errors and warnings are shown at the top of the window. Another feature of the <code>DataWindow</code> is that it automatically creates a <code>WarningAndErrorValidator</code> control and sets the view model as source. This way, all the warnings of the view model are also shown in the <code>InfoBarMessageControl</code>. In other words: you don’t have to do anything to implementation validation, except for actually setting the warnings and errors in your view model. And if the validation takes place in the model, you can use the <code>ViewModelToModelAttribute</code> so you don’t have to worry about that either.</p>
<h2 id="customizing-the-buttons">Customizing the buttons<a class="headerlink" href="#customizing-the-buttons" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>It is possible to use custom buttons and still be able to use the <code>DataWindow</code>.</p>
<ol>
<li>First, use the base constructor to specify that you want to use custom mode.</li>
</ol>
<pre class="nocode">/// &lt;summary&gt;
/// Upload window.
/// &lt;/summary&gt;
public class UploadWindow : DataWindow
{
    public UploadWindow()
        : base(DataWindowMode.Custom)
    {
        InitializeComponent();
    }
}
</pre><ol>
<li>Add the custom buttons. This must be done before the call to <code>InitializeComponent</code>.</li>
</ol>
<pre class="nocode">/// &lt;summary&gt;
/// Upload window.
/// &lt;/summary&gt;
public class UploadWindow : DataWindow
{
    public UploadWindow()
        : base(DataWindowMode.Custom)
    {
        AddCustomButton(new DataWindowButton(&quot;Upload&quot;, &quot;Upload&quot;));

        InitializeComponent();
    }
}
</pre><h2 id="styling-the-datawindow">Styling the DataWindow<a class="headerlink" href="#styling-the-datawindow" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Starting with Catel 2.4, the <code>DataWindow</code> has its own styles. These are located in <code>DataWindow.generic.xaml</code>. Below is a table that contains the available styles and a short description.</p>
<table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Style key</th>
	<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
	<td>DataWindowStyle</td>
	<td>The actual window style which can be used to decorate or customize the window itself.</td>
</tr>
<tr>
	<td>DataWindowButtonContainerStyle</td>
	<td>The container that is used for the buttons. This is a <code>WrapPanel</code>, so the styles must match that.</td>
</tr>
<tr>
	<td>DataWindowButtonStyle</td>
	<td>The style for the buttons. By default, the buttons are right aligned and have a fixed size.</td>
</tr>
</tbody>
</table>
<h2 id="closing-the-datawindow-with-the-escape-key">Closing the DataWindow with the Escape key<a class="headerlink" href="#closing-the-datawindow-with-the-escape-key" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The <code>DataWindow</code> can be configured to close with the Escape key using the <code>CanCloseUsingEscape</code> dependency property (default <code>true</code>). This is useful for when <code>DataWindow</code> is used in e.g. dialogs. When used as the main window, it is advised to set <code>CanCloseUsingEscape=False</code>, as the user can inadvertedly close the application by pressing the <code>Escape</code> key.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/catel-mvvm/views/xaml/window-and-datawindow.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   this.page.url = 'http://docs.catelproject.com/catel-mvvm/views/xaml/window-and-datawindow.htm';
					   this.page.identifier = '../src/vnext/catel-mvvm/views/xaml/window-and-datawindow.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../js/highlight.pack.js"></script>
    <script src="../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
