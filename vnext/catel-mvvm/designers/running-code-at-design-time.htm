<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Running code at design-time - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../../index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../introduction/index.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../faq/index.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../setup-deployment/index.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../getting-started/index.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/index.htm">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/auditing/index.htm">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/behaviors-triggers/index.htm">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/bindings/index.htm">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/commands-events/index.htm">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/converters/index.htm">Converters</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../catel-mvvm/designers/index.htm">Designers</a></span></li>

<li class="tocentry"><a href="../../catel-mvvm/designers/design-time-view-models.htm">Design-time view models</a>
</li>
<li class="tocentry current"><a class="current" href="../../catel-mvvm/designers/running-code-at-design-time.htm">Running code at design-time</a>
</li>
</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/locators-naming-conventions/index.htm">Locators & naming conventions</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/services/index.htm">Services</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/view-models/index.htm">View models</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-mvvm/views/index.htm">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../CatelMVVM.htm">Catel.MVVM</a></li> / <li><a href="../../catel-mvvm/designers/index.htm">Designers</a></li> / <li><a href="../../catel-mvvm/designers/running-code-at-design-time.htm">Running code at design-time</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="running-code-at-design-time">Running code at design-time<a class="headerlink" href="#running-code-at-design-time" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Sometimes one needs to run code during design-time. A good example is to register a custom <em>LanguageResourceSource</em> in the <em>LanguageService</em> to show translations in the designer. Unfortunately it is not as easy as putting some code in the code-behind to get this working.</p>
<p>Starting with Catel 4.3, calling <em>CatelEnvironment.IsInDesignTime</em> will automatically invoke <em>DesignTimeHelper.InitializeDesignTime</em> if in design mode. This means you only have to add classes deriving from <em>DesignTimeInitializer</em> and they will automatically be invoked when any code is checking if it's currently running inside a designer context (e.g. <em>LanguageBinding</em>)</p>
<p> </p>
<ul>
<li><a href="#Runningcodeatdesign-time-IntroducingtheDesignTimeCodeattribute">Introducing the DesignTimeCode attribute</a></li>
<li><a href="#Runningcodeatdesign-time-IntroducingtheDesignTimeInitializer">Introducing the DesignTimeInitializer</a></li>
</ul>
<h1 id="introducing-the-designtimecode-attribute">Introducing the DesignTimeCode attribute<a class="headerlink" href="#introducing-the-designtimecode-attribute" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>To allow users to run code in the designer (Visual Studio or Blend), Catel introduces the <em>DesignTimeCodeAttribute</em>. This is an assembly-wide attribute which will specify the class to create at design time. This means that it is possible to create multiple attributes. Below is an example of the usage of the attribute:</p>
<pre class="nocode">{.java data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot; style=&quot;brush: java; gutter: false; theme: Confluence&quot;}
[assembly: DesignTimeCode(typeof(WpfApplication.Catel.DesignTimeLanguageService))]
[assembly: DesignTimeCode(typeof(WpfApplication.Catel.DesignTimeServiceLocator))]
</pre><p>When the attribute is found by Catel, it will automatically construct the types specified in the attribute. This will allow the constructor to execute any code during design time.</p>
<h1 id="introducing-the-designtimeinitializer">Introducing the DesignTimeInitializer<a class="headerlink" href="#introducing-the-designtimeinitializer" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>The <em>DesignTimeCodeAttribute</em> contains the types that are constructed during design-time. Although the reflection in Catel is protected by only checking these arguments at design-time, it cannot be guaranteed for other systems. Therefore Catel also provides the <em>DesignTimeInitializer</em> base class. This is a base class that checks whether the type being constructed is actually running inside a design tool.</p>
<p>Below is an example of the usage, which registers custom language resource sources in the language service. This allows real-time updates of the *LanguageService *in the designer.</p>
<pre class="nocode">{.java data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot; style=&quot;brush: java; gutter: false; theme: Confluence&quot;}
public class DesignTimeLanguageService : Catel.DesignTimeInitializer
{
    protected override void Initialize()
    {
        var dependencyResolver = this.GetDependencyResolver();
        var languageService = dependencyResolver.Resolve&lt;ILanguageService&gt;();

        languageService.CacheResults = false;

        var resourcesSource = new LanguageResourceSource(&quot;WpfApplication.Catel&quot;, &quot;WpfApplication.Catel.Properties&quot;, &quot;Resources&quot;);
        languageService.RegisterLanguageSource(resourcesSource);
    }
}
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

</body>
</html>
