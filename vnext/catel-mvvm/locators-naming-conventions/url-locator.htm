<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>UrlLocator - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelCore.htm">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Auditing.htm">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Behaviors&triggers.htm">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Bindings.htm">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Commands&events.htm">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Converters.htm">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Designers.htm">Designers</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../Locators&namingconventions.htm">Locators & naming conventions</a></span></li>
<li class="tocentry"><a href="../../catel-mvvm/locators-naming-conventions/view-model-locator.htm">ViewModelLocator</a>
</li>
<li class="tocentry"><a href="../../catel-mvvm/locators-naming-conventions/view-locator.htm">ViewLocator</a>
</li>
<li class="tocentry current"><a class="current" href="../../catel-mvvm/locators-naming-conventions/url-locator.htm">UrlLocator</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#resolving-by-naming-convention">Resolving by naming convention</a></li>
<li class="tocentry"><a href="#manually-resolving-a-naming-convention">Manually resolving a naming convention</a></li>
<li class="tocentry"><a href="#customizing-naming-conventions">Customizing naming conventions</a></li>
<li class="tocentry"><a href="#registering-custom-urls">Registering custom urls</a></li>
<li class="tocentry"><a href="#using-a-custom-urllocator">Using a custom UrlLocator</a></li>
</ul>
<li class="tocentry"><a href="../../catel-mvvm/locators-naming-conventions/naming-conventions.htm">Naming conventions</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Services.htm">Services</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Viewmodels.htm">View models</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Views.htm">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelFody.htm">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../CatelMVVM.htm">Catel.MVVM</a></li> / <li><a href="../../Locators&namingconventions.htm">Locators & naming conventions</a></li> / <li><a href="../../catel-mvvm/locators-naming-conventions/url-locator.htm">UrlLocator</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="urllocator">UrlLocator<a class="headerlink" href="#urllocator" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>The <code>IUrlLocator</code> class is responsible for resolving the right urls for the xaml views for a view model in navigation based applications. Before Catel 3.0, the <code>INavigationService</code> was responsible for resolving the url, but this responsibility is now taken over by the <code>IUrlLocator</code>. The <code>NavigationService</code> internally uses the <code>IUrlLocator</code> to resolve the views.</p>
<h2 id="resolving-by-naming-convention">Resolving by naming convention<a class="headerlink" href="#resolving-by-naming-convention" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>It is possible to resolve views using the <code>IUrlLocator</code>. Then you can use the <code>ResolveUrl</code> method to resolve the url based on the type of the view model.</p>
<p>For example, the following view model:</p>
<pre class="nocode">Catel.Examples.ViewModels.MyViewModel
</pre><p>will be resolved as:</p>
<pre class="nocode">/Views/MyPage.xaml
</pre><div class="alert alert-warning"><span class="alert-title"><i class="fa fa-warning"></i> Important!</span><p>Note that the <code>UrlLocator</code> checks whether the resource actually exists. If the resource does not exists, it will not be able to resolve a view</p>
</div><h2 id="manually-resolving-a-naming-convention">Manually resolving a naming convention<a class="headerlink" href="#manually-resolving-a-naming-convention" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To manually resolve a naming convention, use the following code:</p>
<pre class="nocode">var urlLocator = ServiceLocator.Instance.ResolveType&lt;IUrlLocator&gt;();
var url = urlLocator.ResolveUrl(typeof(MyViewModel));
</pre><h2 id="customizing-naming-conventions">Customizing naming conventions<a class="headerlink" href="#customizing-naming-conventions" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>By default, the <code>IUrlLocator</code> uses the following naming conventions to resolve urls:</p>
<ul>
<li>/Views/[VM].xaml</li>
<li>/Views/[VM]View.xaml</li>
<li>/Views/[VM]Control.xaml</li>
<li>/Views/[VM]Page.xaml</li>
<li>/Views/[VM]Window.xaml</li>
<li>/Controls/[VM].xaml</li>
<li>/Controls/[VM]Control.xaml</li>
<li>/Pages/[VM].xaml</li>
<li>/Pages/[VM]Page.xaml</li>
<li>/Windows/[VM].xaml</li>
<li>/Windows/[VM]Window.xaml</li>
<li>/UI.Views/[VM].xaml</li>
<li>/UI.Views/[VM]View.xaml</li>
<li>/UI.Views/[VM]Control.xaml</li>
<li>/UI.Views/[VM]Page.xaml</li>
<li>/UI.Views/[VM]Window.xaml</li>
<li>/UI.Controls/[VM].xaml</li>
<li>/UI.Controls/[VM]Control.xaml</li>
<li>/UI.Pages/[VM].xaml</li>
<li>/UI.Pages/[VM]Page.xaml</li>
<li>/UI.Windows/[VM].xaml</li>
<li>/UI.Windows/[VM]Window.xaml</li>
<li>/[VM].xaml</li>
<li>/[VM]Control.xaml</li>
<li>/[VM]Page.xaml</li>
<li>/[VM]Window.xaml</li>
</ul>
<div class="alert alert-info"><span class="alert-title"><i class="fa fa-info-circle"></i> Info</span><p>For more information about naming conventions, see <a href="./naming-conventions.htm">Naming conventions</a></p>
</div><p>However, it is possible to add or remove new naming conventions to support your own naming convention. For example, to add a new naming convention for a different assembly, use this code:</p>
<pre class="nocode">var urlLocator = ServiceLocator.Instance.ResolveType&lt;IUrlLocator&gt;();
urlLocator.NamingConventions.Add(&quot;/MyPages/[VM]Page.xaml&quot;);
</pre><h2 id="registering-custom-urls">Registering custom urls<a class="headerlink" href="#registering-custom-urls" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Sometimes, a class doesn't follow a naming convention (for whatever reason possible). In such a case, it is possible to register a mapping manually using the following code:</p>
<pre class="nocode">var urlLocator = ServiceLocator.Instance.ResolveType&lt;IUrlLocator&gt;();
urlLocator.Register(typeof(MyViewModelNotFollowingNamingConvention), &quot;/MyVerySpecialUrl.xaml&quot;);
</pre><h2 id="using-a-custom-urllocator">Using a custom UrlLocator<a class="headerlink" href="#using-a-custom-urllocator" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>If you want to have total freedom to determine which url is provided per view model (maybe there are other services that have an impact on this), it is possible to create a custom <code>IUrlLocator</code> implementation. Then the only thing to do is to register it using the following code:</p>
<pre class="nocode">ServiceLocator.Default.Register&lt;IUrlLocator, MyUrlLocator&gt;();
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/catel-mvvm/locators-naming-conventions/url-locator.md" target="_blank">contribute</a>!</p>
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
