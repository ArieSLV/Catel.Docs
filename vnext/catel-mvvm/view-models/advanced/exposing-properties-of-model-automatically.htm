<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Exposing properties of a model automatically - Catel documentation</title>
    <link rel="shortcut icon" href="../../../favicon.ico">
    <link rel="stylesheet" href="../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../../../index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelCore.htm">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../CatelMVVM.htm">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Auditing.htm">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Behaviors&triggers.htm">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Bindings.htm">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Commands&events.htm">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Converters.htm">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Designers.htm">Designers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Locators&namingconventions.htm">Locators & naming conventions</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Services.htm">Services</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../Viewmodels.htm">View models</a></span></li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/introduction.htm">Introduction</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-basic-view-model.htm">Creating a basic view model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-view-model-that-watches-over-other-view-models.htm">Creating a view model that watches over other view models</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-view-model-with-model.htm">Creating a view model with a model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-view-model-with-model-and-mappings.htm">Creating a view model with a model and mappings</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/mapping-properties-from-view-to-view-model.htm">Mapping properties from view to view model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/nested-view-models.htm">Nested view models</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/validation-in-view-models.htm">Validation in view models</a>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../Advanced.htm">Advanced</a></span></li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/keeping-view-models-alive.htm">Keeping view models alive</a>
</li>
<li class="tocentry current"><a class="current" href="../../../catel-mvvm/view-models/advanced/exposing-properties-of-model-automatically.htm">Exposing properties of a model automatically</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/determine-view-model-type-dynamically-at-runtime.htm">Determine the view model type dynamically at runtime</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models.htm">Controlling the instantiation of view models</a>
</li>

</ul>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Views.htm">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../Home.htm">Home</a></li> / <li><a href="../../../CatelMVVM.htm">Catel.MVVM</a></li> / <li><a href="../../../Viewmodels.htm">View models</a></li> / <li><a href="../../../Advanced.htm">Advanced</a></li> / <li><a href="../../../catel-mvvm/view-models/advanced/exposing-properties-of-model-automatically.htm">Exposing properties of a model automatically</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="exposing-properties-of-a-model-automatically">Exposing properties of a model automatically<a class="headerlink" href="#exposing-properties-of-a-model-automatically" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Note that starting with Catel 3.8, this feature is part of Catel.Fody which brings support for this feature on all platforms. More information can be found here.</p>
<p>Starting with Catel 2.2, a new attribute called <em>ExposeAttribute</em> is introduced. One of the features that already existed in Catel before is the <em>ViewModelToModelAttribute</em>. The goal of these attributes is to easily map properties from a model to the view model so as much of the plumbing (setting/getting properties, rechecking validation, etc) is done automatically for the developer.</p>
<p>This feature is only available in WPF because Silverlight does not provide the <em>ICustomTypeDescriptor</em> or an equivalent feature</p>
<p>Using the ViewModelToModelAttribute, this is the syntax to map properties automatically:</p>
<pre class="nocode">/// &lt;summary&gt;
/// Gets or sets the person.
/// &lt;/summary&gt;
[Model]
public Person Person
{
    get { return GetValue&lt;Person&gt;(PersonProperty); }
    private set { SetValue(PersonProperty, value); }
}

/// &lt;summary&gt;
/// Register the Person property so it is known in the class.
/// &lt;/summary&gt;
public static readonly PropertyData PersonProperty = RegisterProperty(&quot;Person&quot;, typeof(Person));

/// &lt;summary&gt;
/// Gets or sets the first name.
/// &lt;/summary&gt;
[ViewModelToModel(&quot;Person&quot;)]
public string FirstName
{
    get { return GetValue&lt;string&gt;(FirstNameProperty); }
    set { SetValue(FirstNameProperty, value); }
}

/// &lt;summary&gt;
/// Register the FirstName property so it is known in the class.
/// &lt;/summary&gt;
public static readonly PropertyData FirstNameProperty = RegisterProperty(&quot;FirstName&quot;, typeof(string));
</pre><p>However, if you only define the <em>FirstName</em> property just to protect your model, then why should you define the whole property? This is where the <em>ExposeAttribute</em> property comes in very handy. This attribute internally registers a new dynamic property on the view model, and then uses the same technique as the <em>ViewModelToModelAttribute</em>.</p>
<p>Below is the new way you can easily expose properties of a model and protect other properties of the model from the view:</p>
<pre class="nocode">/// &lt;summary&gt;
/// Gets or sets the person.
/// &lt;/summary&gt;
[Model]
[Expose(&quot;FirstName&quot;)]
[Expose(&quot;MiddleName&quot;)]
[Expose(&quot;LastName&quot;)]
private  Person Person
{
    get { return GetValue&lt;Person&gt;(PersonProperty); }
    set { SetValue(PersonProperty, value); }
}

/// &lt;summary&gt;
/// Register the Person property so it is known in the class.
/// &lt;/summary&gt;
public static readonly PropertyData PersonProperty = RegisterProperty(&quot;Person&quot;, typeof(Person));
</pre><p>So, this is a very cool feature that allows you to protect your model without having to re-define all the properties on the view model. Also, the validation in the model is automatically synchronized with the view model when you use this attribute.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../js/highlight.pack.js"></script>
    <script src="../../../js/theme.js"></script>

</body>
</html>
