<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Determine the view model type dynamically at runtime - Catel documentation</title>
    <link rel="shortcut icon" href="../../../favicon.ico">
    <link rel="stylesheet" href="../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelCore.htm">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../CatelMVVM.htm">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Auditing.htm">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Behaviors&triggers.htm">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Bindings.htm">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Commands&events.htm">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Converters.htm">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Designers.htm">Designers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Locators&namingconventions.htm">Locators & naming conventions</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Services.htm">Services</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../Viewmodels.htm">View models</a></span></li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/introduction.htm">Introduction</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-basic-view-model.htm">Creating a basic view model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-view-model-with-model.htm">Creating a view model with a model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/creating-view-model-with-model-and-mappings.htm">Creating a view model with a model and mappings</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/mapping-properties-from-view-to-view-model.htm">Mapping properties from view to view model</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/nested-view-models.htm">Nested view models</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/validation-in-view-models.htm">Validation in view models</a>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../Advanced.htm">Advanced</a></span></li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/keeping-view-models-alive.htm">Keeping view models alive</a>
</li>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/exposing-properties-of-model-automatically.htm">Exposing properties of a model automatically</a>
</li>
<li class="tocentry current"><a class="current" href="../../../catel-mvvm/view-models/advanced/determine-view-model-type-dynamically-at-runtime.htm">Determine the view model type dynamically at runtime</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#how-to-dynamically-determine-the-view-model-type-using-a-usercontrol">How to dynamically determine the view model type using a UserControl</a></li>
<li class="tocentry"><a href="#how-to-dynamically-determine-the-view-model-using-a-behavior">How to dynamically determine the view model using a behavior</a></li>
</ul>
<li class="tocentry"><a href="../../../catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models.htm">Controlling the instantiation of view models</a>
</li>

</ul>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../Views.htm">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../CatelFody.htm">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../Home.htm">Home</a></li> / <li><a href="../../../CatelMVVM.htm">Catel.MVVM</a></li> / <li><a href="../../../Viewmodels.htm">View models</a></li> / <li><a href="../../../Advanced.htm">Advanced</a></li> / <li><a href="../../../catel-mvvm/view-models/advanced/determine-view-model-type-dynamically-at-runtime.htm">Determine the view model type dynamically at runtime</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="determine-the-view-model-type-dynamically-at-runtime">Determine the view model type dynamically at runtime<a class="headerlink" href="#determine-the-view-model-type-dynamically-at-runtime" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Starting with Catel 3.1, it is possible to determine the view model type of a view dynamically at runtime. This sounds complex, but let's bring up a user scenario which a user came up with:</p>
<p>“I have a shape view and a ShapeBaseViewModel. Then, I have models such as Rectangle, Circle, etc, and each model has its own view model (RectangleViewModel, CircleViewModel, etc). How can I solve this issue using Catel?”</p>
<p>This case proves that it should be at least possible to determine the type of the view model of a view, based on the <em>DataContext</em> of a view.</p>
<p>Note that this feature is available on all controls an behaviors, not only for the <em>UserControl</em></p>
<h2 id="how-to-dynamically-determine-the-view-model-type-using-a-usercontrol">How to dynamically determine the view model type using a UserControl<a class="headerlink" href="#how-to-dynamically-determine-the-view-model-type-using-a-usercontrol" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Determining the view model dynamically when using the <em>UserControl</em> is extremely easy. You can override the <em>GetViewModelType(object)</em> method like this:</p>
<pre class="nocode">protected override Type GetViewModelType(object dataContext)
{
    if (dataContext is Rectangle)
    {
        return typeof (RectangleViewModel);
    }

    if (dataContext is Circle)
    {
        return typeof (CircleViewModel);
    }

    return null;
}
</pre><p>When the method returns <em>null</em>, it will fall back on the earlier determined view model type.</p>
<h2 id="how-to-dynamically-determine-the-view-model-using-a-behavior">How to dynamically determine the view model using a behavior<a class="headerlink" href="#how-to-dynamically-determine-the-view-model-using-a-behavior" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Determining the view model dynamically when using behaviors must be done via the <em>DetermineViewModelType</em> event like this:</p>
<pre class="nocode">mvvmBehavior.DetermineViewModelType += (sender, e) =&gt;
{
    if (e.DataContext is Rectangle)
    {
        e.ViewModelType = typeof (RectangleViewModel);
    }

    if (e.DataContext is Circle)
    {
        e.ViewModelType = typeof(CircleViewModel);
    }
};
</pre><p>There is no need to set the <em>e.ViewModelType</em> to <em>null</em> because that is the default value.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/catel-mvvm/view-models/advanced/determine-view-model-type-dynamically-at-runtime.md" target="_blank">contribute</a>!</p>
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../js/highlight.pack.js"></script>
    <script src="../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
