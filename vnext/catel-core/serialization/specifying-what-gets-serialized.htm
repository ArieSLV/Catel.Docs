<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Specifying what gets serialized - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../CatelCore.htm">Catel.Core</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../ApiCop.htm">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Argumentchecking.htm">Argument checking</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Caching.htm">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Configuration.htm">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Datahandling.htm">Data handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Exceptionhandling.htm">Exception handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../IoC(ServiceLocator&TypeFactory).htm">IoC (ServiceLocator & TypeFactory)</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Logging.htm">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Messaging.htm">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Multilingual.htm">Multilingual</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Parallelinvocation&tasks.htm">Parallel invocation & tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Pooling.htm">Pooling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Preventingmemoryleaks.htm">Preventing memory leaks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Reflection.htm">Reflection</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Scoping.htm">Scoping</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../Serialization.htm">Serialization</a></span></li>
<li class="tocentry"><a href="../../catel-core/serialization/introduction.htm">Introduction</a>
</li>
<li class="tocentry current"><a class="current" href="../../catel-core/serialization/specifying-what-gets-serialized.htm">Specifying what gets serialized</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#including-fields-and-properties-using-includeinserialization-attribute">Including fields and properties using IncludeInSerialization attribute</a></li>
<li class="tocentry"><a href="#excluding-fields-and-properties-using-excludefromserialization-attribute">Excluding fields and properties using ExcludeFromSerialization attribute</a></li>
<li class="tocentry"><a href="#serializing-a-modelbase-as-collection">Serializing a ModelBase as collection</a></li>
<li class="tocentry"><a href="#implementing-a-custom-iserializationmanager">Implementing a custom ISerializationManager</a></li>
</ul>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Customizingserialization.htm">Customizing serialization</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Supportedserializers.htm">Supported serializers</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Validation.htm">Validation</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelFody.htm">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelReSharper.htm">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../CatelCore.htm">Catel.Core</a></li> / <li><a href="../../Serialization.htm">Serialization</a></li> / <li><a href="../../catel-core/serialization/specifying-what-gets-serialized.htm">Specifying what gets serialized</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="specifying-what-gets-serialized">Specifying what gets serialized<a class="headerlink" href="#specifying-what-gets-serialized" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>By default, Catel only serializes the defined Catel properties on theÂ <em>ModelBase</em> or any deriving classes. It is possible to customize this behavior. Below is a class which will be used in all examples:</p>
<pre class="nocode">public class MyModel : ModelBase
{
    private string _fieldValue;
    
    public string RegularProperty { get; set; }
        
    public string CatelProperty
    {
        get { return GetValue&lt;string&gt;(CatelPropertyProperty); }
        set { SetValue(CatelPropertyProperty, value); }
    }

    public static readonly PropertyData CatelPropertyProperty = RegisterProperty(&quot;CatelProperty&quot;, typeof(string), null);
}
</pre><table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Member name</th>
	<th>Gets serialized</th>
</tr>
</thead>
<tbody>
<tr>
	<td>_fieldValue</td>
	<td>false</td>
</tr>
<tr>
	<td>RegularProperty</td>
	<td>false</td>
</tr>
<tr>
	<td>CatelProperty</td>
	<td>true</td>
</tr>
</tbody>
</table>
<h2 id="including-fields-and-properties-using-includeinserialization-attribute">Including fields and properties using IncludeInSerialization attribute<a class="headerlink" href="#including-fields-and-properties-using-includeinserialization-attribute" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To include fields or regular properties on an object, use the following code:</p>
<pre class="nocode">public class MyModel : ModelBase
{
    [IncludeInSerialization]
    private string _fieldValue;
    
    [IncludeInSerialization]
    public string RegularProperty { get; set; }
        
    public string CatelProperty
    {
        get { return GetValue&lt;string&gt;(CatelPropertyProperty); }
        set { SetValue(CatelPropertyProperty, value); }
    }

    public static readonly PropertyData CatelPropertyProperty = RegisterProperty(&quot;CatelProperty&quot;, typeof(string), null);
}
</pre><table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Member name</th>
	<th>Gets serialized</th>
</tr>
</thead>
<tbody>
<tr>
	<td>_fieldValue</td>
	<td>true</td>
</tr>
<tr>
	<td>RegularProperty</td>
	<td>true</td>
</tr>
<tr>
	<td>CatelProperty</td>
	<td>true</td>
</tr>
</tbody>
</table>
<div class="alert alert-warning"><span class="alert-title"><i class="fa fa-warning"></i> Important!</span><p>Note that private members can only be serialized in full .NET, not in limited platforms such as UWP</p>
</div><h2 id="excluding-fields-and-properties-using-excludefromserialization-attribute">Excluding fields and properties using ExcludeFromSerialization attribute<a class="headerlink" href="#excluding-fields-and-properties-using-excludefromserialization-attribute" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To exclude Catel properties on an object, use the following code:</p>
<pre class="nocode">public class MyModel : ModelBase
{
    private string _fieldValue;
    
    public string RegularProperty { get; set; }
Â 
    [ExcludeFromSerialization]
    public string CatelProperty
    {
        get { return GetValue&lt;string&gt;(CatelPropertyProperty); }
        set { SetValue(CatelPropertyProperty, value); }
    }

    public static readonly PropertyData CatelPropertyProperty = RegisterProperty(&quot;CatelProperty&quot;, typeof(string), null);
}
</pre><table class="table table-bordered-all table-responsive">
<thead>
<tr>
	<th>Member name</th>
	<th>Gets serialized</th>
</tr>
</thead>
<tbody>
<tr>
	<td>_fieldValue</td>
	<td>false</td>
</tr>
<tr>
	<td>RegularProperty</td>
	<td>false</td>
</tr>
<tr>
	<td>CatelProperty</td>
	<td>false</td>
</tr>
</tbody>
</table>
<h2 id="serializing-a-modelbase-as-collection">Serializing a ModelBase as collection<a class="headerlink" href="#serializing-a-modelbase-as-collection" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>There is a very edge case that a class derives fromÂ <em>ModelBase</em>, but also implements <em>IList&lt;T&gt;</em>. In this case, it's hard for the serializers to determine what to do. By default, it will treat the model as a Catel model (since it can contain more properties than just theÂ <em>Items</em> property. If such a class should be serialized as collection (meaning it will only serialize theÂ <em>Items</em> property), decorate it with theÂ <em>SerializeAsCollection</em> attribute:</p>
<p>Â </p>
<pre class="nocode">[SerializeAsCollection]
public class MyModel : ModelBase, IList&lt;int&gt;
{
    // implementation left out for readability
}
</pre><h2 id="implementing-a-custom-iserializationmanager">Implementing a custom ISerializationManager<a class="headerlink" href="#implementing-a-custom-iserializationmanager" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Internally Catel uses a default implementation of theÂ <em>ISerializationManager</em> to determine what members of a type should be serialized. It is possible to customize this behavior by overriding a single method or by creating a brand new type. Below is an example which always excludesÂ <em>Password</em> properties and fields from serialization.</p>
<pre class="nocode">public class SafeSerializationManager : SerializationManager
{
    public override HashSet&lt;string&gt; GetFieldsToSerialize(Type type)
    {
        var fieldsList = new List&lt;string&gt;(base.GetFieldsToSerialize(type));
        
        for (int i = 0; i &lt; fieldsList.Count; i++)
        {
            if (string.Equals(fieldsList[i], &quot;_password&quot;))
            {
                fieldsList.RemoveAt(i--);
            }
        }
        
        return new HashSet&lt;string&gt;(fieldsList);
    }
    
    public override HashSet&lt;string&gt; GetPropertiesToSerialize(Type type)
    {
        var propertiesList = new List&lt;string&gt;(base.GetPropertiesToSerialize(type));
        
        for (int i = 0; i &lt; propertiesList.Count; i++)
        {
            if (string.Equals(propertiesList[i], &quot;Password&quot;))
            {
                propertiesList.RemoveAt(i--);
            }
        }
        
        return new HashSet&lt;string&gt;(propertiesList);
    }   
}
</pre><p>Don't forget to register it in the <em>ServiceLocator</em> as well:</p>
<pre class="nocode">var serviceLocator = ServiceLocator.Default;
serviceLocator.RegisterType&lt;ISerializationManager, SafeSerializationManager&gt;();
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/catel-core/serialization/specifying-what-gets-serialized.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   this.page.url = 'http://docs.catelproject.com/catel-core/serialization/specifying-what-gets-serialized.htm';
					   this.page.identifier = '../src/vnext/catel-core/serialization/specifying-what-gets-serialized.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
