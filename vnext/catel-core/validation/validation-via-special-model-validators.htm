<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Validation via special model validators - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="../../index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../introduction/index.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../faq/index.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../setup-deployment/index.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../getting-started/index.htm">Getting started</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../catel-core/index.htm">Catel.Core</a></span></li>

<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/apicop/index.htm">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/argument-checking/index.htm">Argument checking</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/caching/index.htm">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/configuration/index.htm">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/data-handling/index.htm">Data handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/exception-handling/index.htm">Exception handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/ioc/index.htm">IoC (ServiceLocator & TypeFactory)</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/logging/index.htm">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/messaging/index.htm">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/multilingual/index.htm">Multilingual</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/parallel-invocation-tasks/index.htm">Parallel invocation & tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/pooling/index.htm">Pooling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/preventing-memory-leaks/index.htm">Preventing memory leaks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/reflection/index.htm">Reflection</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/scoping/index.htm">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../catel-core/serialization/index.htm">Serialization</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../catel-core/validation/index.htm">Validation</a></span></li>

<li class="tocentry"><a href="../../catel-core/validation/validation-via-validate-method.htm">Validation via validate methods</a>
</li>
<li class="tocentry"><a href="../../catel-core/validation/validation-via-data-annotations.htm">Validation via data annotations</a>
</li>
<li class="tocentry current"><a class="current" href="../../catel-core/validation/validation-via-special-model-validators.htm">Validation via special model validators</a>
</li>
<li class="tocentry"><a href="../../catel-core/validation/validation-via-ivalidator.htm">Validation via IValidator</a>
</li>
<li class="tocentry"><a href="../../catel-core/validation/using-validation-context.htm">Using the validation context</a>
</li>
<li class="tocentry"><a href="../../catel-core/validation/getting-summary-of-validation-results.htm">Getting a summary of validation results</a>
</li>
<li class="tocentry"><a href="../../catel-core/validation/deferring-validation.htm">Deferring validation</a>
</li>
</ul>
</li>
</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../catel-core/index.htm">Catel.Core</a></li> / <li><a href="../../catel-core/validation/index.htm">Validation</a></li> / <li><a href="../../catel-core/validation/validation-via-special-model-validators.htm">Validation via special model validators</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="validation-via-special-model-validators">Validation via special model validators<a class="headerlink" href="#validation-via-special-model-validators" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>By default, Catel registers the <em>AttributeValidatorProvider</em> as the <em>IValidatorProvider</em>. This way the <em>ModelBase</em> and all the classes that derive from it can easily add a custom validator by using the <em>ValidateModelAttribute</em>.</p>
<p>Note that it is still possible to register a custom <em>IValidatorProvider</em> to customize this behavior. It is even possible to set the <em>Validator</em> property of the <em>ModelBase</em> on a specific instance of a model</p>
<ul>
<li><a href="#Validationviaspecialmodelvalidators-Implementingthevalidator">Implementing the validator</a></li>
</ul>
<h1 id="implementing-the-validator">Implementing the validator<a class="headerlink" href="#implementing-the-validator" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>The first thing that needs to be done is to write a custom implementation of the <em>IValidator</em> interface. You can either implement all the members yourself or derive from *ValidatorBase *as is shown below:</p>
<pre class="nocode">{.java data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot; style=&quot;brush: java; gutter: false; theme: Confluence&quot;}
public class PersonValidator : ValidatorBase&lt;PersonModel&gt;
{
    protected override void ValidateFields(PersonModel instance, List&lt;IFieldValidationResult&gt; validationResults)
    {
        if (string.IsNullOrWhiteSpace(instance.FirstName))
        {
            validationResults.Add(FieldValidationResult.CreateError(PersonModel.FirstNameProperty, &quot;First name is required&quot;));
        }
 
        if (string.IsNullOrWhiteSpace(instance.LastName))
        {
            validationResults.Add(FieldValidationResult.CreateError(PersonModel.FirstNameProperty, &quot;First name is required&quot;));
        }
    }
 
    protected override void ValidateBusinessRules(PersonModel instance, List&lt;IBusinessRuleValidationResult&gt; validationResults)
    {
        // No business rules validations yet
    }
}
</pre><p>Decorating a model with the attribute</p>
<p>Once a validator is available, the only thing that needs to be done is to decorate the model with the <em>ValidateModelAttribute</em>:</p>
<pre class="nocode">{.java data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot; style=&quot;brush: java; gutter: false; theme: Confluence&quot;}
[ValidateModel(typeof(PersonValidator))]
public class PersonModel : ModelBase
{
    public string FirstName
    {
        get { return GetValue&lt;string&gt;(FirstNameProperty); }
        set { SetValue(FirstNameProperty, value); }
    }

    public static readonly PropertyData FirstNameProperty = RegisterProperty(&quot;FirstName&quot;, typeof(string), string.Empty);

    public string LastName
    {
        get { return GetValue&lt;string&gt;(LastNameProperty); }
        set { SetValue(LastNameProperty, value); }
    }

    public static readonly PropertyData LastNameProperty = RegisterProperty(&quot;LastName&quot;, typeof(string), string.Empty);
}
</pre><p>The custom validator will now automatically be called.</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

</body>
</html>
