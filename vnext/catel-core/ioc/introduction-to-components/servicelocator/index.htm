<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>ServiceLocator - Catel documentation</title>
    <link rel="shortcut icon" href="../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../../home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../introduction/">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../faq/">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../setup-deployment/">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../getting-started/">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../examples/">Examples</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-core/">Catel.Core</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/apicop/">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/argument-checking/">Argument checking</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/caching/">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/configuration/">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/data-handling/">Data handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/exception-handling/">Exception handling</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-core/ioc/">IoC (ServiceLocator & TypeFactory)</a></span></li>
<li class="tocentry"><a href="../../../../catel-core/ioc/introduction/">Introduction</a>
</li>
<li class="tocentry"><a href="../../../../catel-core/ioc/dependency-injection/">Dependency injection</a>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-core/ioc/introduction-to-components/">Introduction to IoC components</a></span></li>
<li class="tocentry current"><a class="current" href="../../../../catel-core/ioc/introduction-to-components/servicelocator/">ServiceLocator</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#registering-a-type">Registering a type</a></li>

<li class="tocentry"><a href="#registering-a-late-bound-type">Registering a late-bound type</a></li>

<li class="tocentry"><a href="#registering-an-instance-of-a-type">Registering an instance of a type</a></li>

<li class="tocentry"><a href="#registering-a-type-via-missingtype-event">Registering a type via MissingType event</a></li>

<li class="tocentry"><a href="#resolving-a-type">Resolving a type</a></li>



</ul>
<li class="tocentry"><a href="../../../../catel-core/ioc/introduction-to-components/typefactory/">TypeFactory</a>
</li>
<li class="tocentry"><a href="../../../../catel-core/ioc/introduction-to-components/dependencyresolver/">DependencyResolver & DependencyResolverManager</a>
</li>
<li class="tocentry"><a href="../../../../catel-core/ioc/introduction-to-components/ensuring-integrity/">Ensuring integrity of the ServiceLocator</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/ioc/automatic-type-registration/">Automatic type registration</a></span>
</li>
<li class="tocentry"><a href="../../../../catel-core/ioc/setting-up-using-configuration/">Setting up the ServiceLocator using configuration</a>
</li>
<li class="tocentry"><a href="../../../../catel-core/ioc/replacing-default-components/">Replacing the default components</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/logging/">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/messaging/">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/multilingual/">Multilingual</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/parallel-invocation-tasks/">Parallel invocation & tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/pooling/">Pooling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/preventing-memory-leaks/">Preventing memory leaks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/reflection/">Reflection</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/scoping/">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/serialization/">Serialization</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/validation/">Validation</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-fody/">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-resharper/">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../tips-tricks/">Tips & tricks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../reference/">API reference</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../../home.htm">Home</a></li> / <li><a href="../../../../catel-core/index.htm">Catel.Core</a></li> / <li><a href="../../../../catel-core/ioc/index.htm">IoC (ServiceLocator & TypeFactory)</a></li> / <li><a href="../../../../catel-core/ioc/introduction-to-components/index.htm">Introduction to IoC components</a></li> / <li><a href="../../../../catel-core/ioc/introduction-to-components/servicelocator/index.htm">ServiceLocator</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="introduction-to-the-servicelocator">Introduction to the ServiceLocator<a class="headerlink" href="#introduction-to-the-servicelocator" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>The <em>ServiceLocator</em> services as the container inside Catel.</p>
<p>Internally it uses the <code>TypeFactory</code> as instantiator for the services.</p>
<p>Catel uses it's own <code>ServiceLocator</code> implementing the <code>IServiceLocator</code> to gather all services required by Catel. For example, default services are the <code>IPleaseWaitService</code> and the <code>IUIVisualizerService</code>. By default, when the first view model is instantiated, Catel registers all default out of the box services to the <code>ServiceLocator</code>. However, it only does this when the specific services are not already registered. This allows an end-developer to register his/her own implementations of the services before any view model is instantiated (for example, at application startup).</p>
<p>The <code>ServiceLocator</code> can be instantiated, but Catel instantiates one instance that can be used and shared amongst all objects inside the same <code>AppDomain</code>. The <code>ServiceLocator</code> can be retrieved by using <code>ServiceLocator</code>.<code>Default</code>.</p>
<div class="alert alert-info"><span class="alert-title"><i class="fa fa-info-circle"></i> Info</span><p>For more information how types are instantiated and dependency injection, take a look at the <a href="./typefactory.htm">TypeFactory documentation</a></p>
</div><h2 id="registering-a-type">Registering a type<a class="headerlink" href="#registering-a-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Use the following code to register a specific type in the <code>ServiceLocator</code>:</p>
<pre class="nocode">ServiceLocator.Default.RegisterType&lt;IPleaseWaitService, PleaseWaitService&gt;();
</pre><h2 id="registering-a-late-bound-type">Registering a late-bound type<a class="headerlink" href="#registering-a-late-bound-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Use the following code to register a late-bound type in the <code>ServiceLocator</code>:</p>
<pre class="nocode">ServiceLocator.Default.RegisterType&lt;IPleaseWaitService&gt;(x =&gt; new PleaseWaitService());
</pre><h2 id="registering-an-instance-of-a-type">Registering an instance of a type<a class="headerlink" href="#registering-an-instance-of-a-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Catel uses the <code>TypeFactory</code> or <code>Activator.CreateInstance</code> to create the interface implementations when the object is first resolved. However, sometimes a service constructor requires parameters or takes a long time to construct. In such cases, it is recommended to create the type manually and register the instance of the type:</p>
<pre class="nocode">var pleaseWaitService = new PleaseWaitService();
ServiceLocator.Default.RegisterInstance&lt;IPleaseWaitService&gt;(pleaseWaitService);
</pre><h2 id="registering-a-type-via-missingtype-event">Registering a type via MissingType event<a class="headerlink" href="#registering-a-type-via-missingtype-event" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The ServiceLocator gives the end-developer a last-resort chance to register a type when it is not registered in the ServiceLocator or any of the external containers. This event is very useful for logging (then the developer in the log knows exactly what type is missing from the IoC container) or it can be used to determine at runtime in a very late stage what implementation of the service must be used. To register a type via the event, subscribe to the event and then use the following code:</p>
<pre class="nocode">private void OnMissingType(object sender, MissingTypeEventArgs e)
{
    if (e.InterfaceType == typeof(IPleaseWaitService))
    {
        // Register an instance
        e.ImplementingInstance = new PleaseWaitService();

        // Or a type
        e.ImplementingType = typeof(PleaseWaitService);
    }
}
</pre><p>If both the ImplementingInstance and ImplementingType are filled, the ImplementingIntance will be used.</p>
<h2 id="resolving-a-type">Resolving a type<a class="headerlink" href="#resolving-a-type" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To retrieve the implementation of a service, use the following code:</p>
<pre class="nocode">var pleaseWaitService = ServiceLocator.Default.ResolveType&lt;IPleaseWaitService&gt;();
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/Catel.Docs/blob/master/src/../src/vnext/catel-core/ioc/introduction-to-components/servicelocator.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   // Always use vNext so comments stay visible
					   this.page.url = 'http://docs.catelproject.com/vnext/catel-core/ioc/introduction-to-components/servicelocator/index.htm';
					   this.page.identifier = '../src/vnext/catel-core/ioc/introduction-to-components/servicelocator.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../../js/highlight.pack.js"></script>
    <script src="../../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
