<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Introduction - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../CatelCore.htm">Catel.Core</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../ApiCop.htm">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Argumentchecking.htm">Argument checking</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Caching.htm">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Configuration.htm">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Datahandling.htm">Data handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Exceptionhandling.htm">Exception handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../IoC(ServiceLocator&TypeFactory).htm">IoC (ServiceLocator & TypeFactory)</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Logging.htm">Logging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Messaging.htm">Messaging</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../Multilingual.htm">Multilingual</a></span></li>
<li class="tocentry current"><a class="current" href="../../catel-core/multilingual/introduction.htm">Introduction</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#setting-up-the-languageservice">Setting up the LanguageService</a></li>
<li class="tocentry"><a href="#using-the-languageservice">Using the LanguageService</a></li>
<li class="tocentry"><a href="#using-the-languageservice-in-xaml">Using the LanguageService in XAML</a></li>
<li class="tocentry"><a href="#implementing-custom-languageservice-from-database">Implementing custom LanguageService (from database)</a></li>
<li class="tocentry"><a href="#attachments">Attachments:</a></li>
</ul>
<li class="tocentry"><a href="../../catel-core/multilingual/displayattribute.htm">DisplayAttribute</a>
</li>
<li class="tocentry"><a href="../../catel-core/multilingual/displaynameattribute.htm">DisplayNameAttribute</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Parallelinvocation&tasks.htm">Parallel invocation & tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Pooling.htm">Pooling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Preventingmemoryleaks.htm">Preventing memory leaks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Reflection.htm">Reflection</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Scoping.htm">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Serialization.htm">Serialization</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Validation.htm">Validation</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelFody.htm">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelReSharper.htm">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../CatelCore.htm">Catel.Core</a></li> / <li><a href="../../Multilingual.htm">Multilingual</a></li> / <li><a href="../../catel-core/multilingual/introduction.htm">Introduction</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="multilingual--localization">Multilingual / Localization<a class="headerlink" href="#multilingual--localization" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Making an application multilingual is a very common feature request nowadays. Therefore Catel provides the resources in several languages and provides the <em>LanguageService</em> to give the developers full control over the translation process in their applications.</p>
<h2 id="setting-up-the-languageservice">Setting up the LanguageService<a class="headerlink" href="#setting-up-the-languageservice" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<h3 id="setting-cultures">Setting cultures<a class="headerlink" href="#setting-cultures" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>By default the <em>LanguageService</em> will use the current UI culture to retrieve the right language values. These can easily be customized:</p>
<pre class="nocode">var dependencyResolver = this.GetDependencyResolver();
var languageService = dependencyResolver.Resolve&lt;ILanguageService&gt;();
 
languageService.PreferredCulture = new CultureInfo(&quot;nl-NL&quot;);
languageService.FallbackCulture = new CultureInfo(&quot;en-US&quot;);
</pre><h3 id="registering-custom-language-sources">Registering custom language sources<a class="headerlink" href="#registering-custom-language-sources" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>In order to customize the language sources, custom language sources can be registered via the <em>RegisterLanguageSource</em> method.</p>
<p>The code below shows how to add a new <em>LanguageResourceSource</em> which represents a resource file in a specific assembly:</p>
<pre class="nocode">var dependencyResolver = this.GetDependencyResolver();
var languageService = dependencyResolver.Resolve&lt;ILanguageService&gt;();
 
// Create source for assembly MyApplication where the Resources.resx is located in the Properties folder
var resourcesSource = new LanguageResourceSource(&quot;MyApplication&quot;, &quot;MyApplication.Properties&quot;, &quot;Resources&quot;);
languageService.RegisterLanguageSource(resourcesSource );
 
// Create source for assembly MyApplication where the Exceptions.resx is located in the Properties folder
var exceptionsSource = new LanguageResourceSource(&quot;MyApplication&quot;, &quot;MyApplication.Properties&quot;, &quot;Exceptions&quot;);
languageService.RegisterLanguageSource(exceptionsSource );
</pre><p>The <em>LanguageService</em> will now automatically query these sources for the translations.</p>
<h2 id="using-the-languageservice">Using the LanguageService<a class="headerlink" href="#using-the-languageservice" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To use the <em>LanguageService</em>, retrieve it via the *DependencyResolver *(or let it be injected) and use the provided methods. The example below retrieves the *WarningTitle *resource string in the <em>PreferredCulture</em>. If the resource cannot be found in the <em>PreferredCulture</em>, it will be retrieved for the <em>FallbackCulture</em>. If that cannot be found, it will return <em>null</em>.</p>
<pre class="nocode">var dependencyResolver = this.GetDependencyResolver();
var languageService = dependencyResolver.Resolve&lt;ILanguageService&gt;();

var warningTitle = languageService.GetString(&quot;WarningTitle&quot;);
</pre><h2 id="using-the-languageservice-in-xaml">Using the LanguageService in XAML<a class="headerlink" href="#using-the-languageservice-in-xaml" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To use the *LanguageService *in XAML, Catel provides the markup extensions.</p>
<h3 id="using-thelanguagebinding-in">Using the LanguageBinding in<a class="headerlink" href="#using-thelanguagebinding-in" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>To use the <em>LanguageBinding</em> markup extension, use the following code:</p>
<pre class="nocode">&lt;TextBlock Text=&quot;{markup:LanguageBinding WarningTitle}&quot; /&gt;
</pre><h3 id="using-the-languagebinding-in-windows-phone">Using the LanguageBinding in Windows Phone<a class="headerlink" href="#using-the-languagebinding-in-windows-phone" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Since Windows Phone does not support markup extensions, a custom <em>MarkupExtension</em> implementation is used in Catel. This requires a little difference in the usage of the markup extension:</p>
<pre class="nocode">&lt;TextBlock Text=&quot;{markup:LanguageBinding ResourceName=WarningTitle}&quot; /&gt;
</pre><h2 id="implementing-custom-languageservice-from-database">Implementing custom LanguageService (from database)<a class="headerlink" href="#implementing-custom-languageservice-from-database" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Implementing a custom <em>LanguageService</em> consists of several steps which are described below.</p>
<div class="alert alert-warning"><span class="alert-title"><i class="fa fa-warning"></i> Important!</span><p>Note that this implementation queries the database for each translation. It is best to read all translations into memory at once to improve performance</p>
</div><h3 id="creating-a-custom-ilanguagesource-implementation">Creating a custom ILanguageSource implementation<a class="headerlink" href="#creating-a-custom-ilanguagesource-implementation" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>First of all, we need to implement a customized language source to allow the custom service to know what source to read for translations:</p>
<pre class="nocode">public class DbLanguageSource : ILanguageSource
{
    public DbLanguageSource(string connectionString)
    {
        Argument.IsNotNullOrWhitespace(() =&gt; connectionString);

        ConnectionString = connectionString;
    }

    public string ConnectionString { get; private set; }

    public string GetSource()
    {
        return ConnectionString;
    }
}
</pre><h3 id="creating-a-custom-dblanguageservice">Creating a custom DbLanguageService<a class="headerlink" href="#creating-a-custom-dblanguageservice" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>Below is a custom implementation of the <em>LanguageService</em>. Note that we only have to derive a single method to fully customize the implementation:</p>
<pre class="nocode">public class DbLanguageService : LanguageService
{
    protected override string GetString(ILanguageSource languageSource, string resourceName, CultureInfo cultureInfo)
    {
        var connectionString = languageSource.GetSource();
        using (var dbConnection = new SqlConnection(connectionString))
        {
            dbConnection.Open();

            var sqlCommand = dbConnection.CreateCommand();
            sqlCommand.CommandType = CommandType.Text;
            sqlCommand.CommandText = @&quot;SELECT [Name] FROM [Translations] WHERE [ResourceName] = @ResourceName AND [CultureName] = @CultureName&quot;;
            sqlCommand.Parameters.Add(new SqlParameter(&quot;ResourceName&quot;, resourceName));
            sqlCommand.Parameters.Add(new SqlParameter(&quot;CultureName&quot;, cultureInfo.ThreeLetterISOLanguageName));

            var translation = sqlCommand.ExecuteScalar() as string;
            if (!string.IsNullOrWhiteSpace(translation))
            {
                return translation;
            }
        }

        // Resource not found, fall back to base if you like, or simply return null
        return base.GetString(languageSource, resourceName, cultureInfo);
    }
}
</pre><h3 id="enabling-the-custom-dblanguageservice">Enabling the custom DbLanguageService<a class="headerlink" href="#enabling-the-custom-dblanguageservice" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h3>
<p>To enable the custom <em>DbLanguageService</em>, it must be registered in the <em>ServiceLocator</em>:</p>
<pre class="nocode">var serviceLocator = ServiceLocator.Default;
 
var dbLanguageService = new DbLanguageService();
 
var dbLanguageSource = new DbLanguageSource(&quot;myConnectionString&quot;);
dbLanguageService.RegisterLanguageSource(dbLanguageSource);
 
serviceLocator.RegisterInstance&lt;ILanguageService&gt;(dbLanguageService);
</pre><h2 id="attachments">Attachments:<a class="headerlink" href="#attachments" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p><img src="images/icons/bullet_blue.gif" /> <a href="attachments/21299207/44859414.png">image2015-5-28 22:8:44.png</a> (image/png)</p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/Catel.Docs/blob/master/src/../src/vnext/catel-core/multilingual/introduction.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   this.page.url = 'http://docs.catelproject.com/catel-core/multilingual/introduction.htm';
					   this.page.identifier = '../src/vnext/catel-core/multilingual/introduction.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
