<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Introduction - Catel documentation</title>
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../css/styles/vs.css">
    <link rel="stylesheet" href="../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../Home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Introduction.htm">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../FAQ.htm">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Setup,deployment&projects.htm">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Gettingstarted.htm">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Examples.htm">Examples</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../CatelCore.htm">Catel.Core</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../ApiCop.htm">ApiCop</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Argumentchecking.htm">Argument checking</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Caching.htm">Caching</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Configuration.htm">Configuration</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Datahandling.htm">Data handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Exceptionhandling.htm">Exception handling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../IoC(ServiceLocator&TypeFactory).htm">IoC (ServiceLocator & TypeFactory)</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../Logging.htm">Logging</a></span></li>
<li class="tocentry current"><a class="current" href="../../catel-core/logging/introduction.htm">Introduction</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#log-and-ilog">Log and ILog</a></li>
<li class="tocentry"><a href="#logmanager">LogManager</a></li>
<li class="tocentry"><a href="#logging-in-code">Logging in code</a></li>
<li class="tocentry"><a href="#logging-in-code-with-additional-data">Logging in code with additional data</a></li>
<li class="tocentry"><a href="#logging-to-the-output-window-or-console">Logging to the output window or console</a></li>
<li class="tocentry"><a href="#overriding-global-log-level-flags">Overriding global log level flags</a></li>
</ul>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../LogListeners.htm">Log Listeners</a></span>
</li>
<li class="tocentry"><a href="../../catel-core/logging/customizing-listeners.htm">Customizing listeners</a>
</li>
<li class="tocentry"><a href="../../catel-core/logging/creating-log-listeners-via-configuration.htm">Creating log listeners via configuration</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Integrationwithexternalloggers.htm">Integration with external loggers</a></span>
</li>
<li class="tocentry"><a href="../../catel-core/logging/anotar-catel-fody.htm">Anotar.Catel.Fody</a>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Messaging.htm">Messaging</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Multilingual.htm">Multilingual</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Parallelinvocation&tasks.htm">Parallel invocation & tasks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Pooling.htm">Pooling</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Preventingmemoryleaks.htm">Preventing memory leaks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Reflection.htm">Reflection</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Scoping.htm">Scoping</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Serialization.htm">Serialization</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../Validation.htm">Validation</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../CatelMVVM.htm">Catel.MVVM</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../tips-tricks/index.htm">Tips & tricks</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../Home.htm">Home</a></li> / <li><a href="../../CatelCore.htm">Catel.Core</a></li> / <li><a href="../../Logging.htm">Logging</a></li> / <li><a href="../../catel-core/logging/introduction.htm">Introduction</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="logging">Logging<a class="headerlink" href="#logging" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Starting with version 2.2, Catel uses a custom internal logging system. This way, the reference to log4net could be removed. The idea behind this move is not to force the user to use log4net. Also, log4net seems deprecated (no new releases for a long time), and other logging systems such as NLog seem to grow in popularity.</p>
<p>The new logging system only allows very basic logging. This way, the logging is kept very simple and the real logging can be implemented by the end-developer if he/she feels the need for it.</p>
<h2 id="log-and-ilog">Log and ILog<a class="headerlink" href="#log-and-ilog" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>All logging is available via the ILog interface. This interface is registered automatically on all objects in Catel as Log field. This way, every object can log any information by calling methods on the Log field.</p>
<p>In Catel, there is only one implementation of the ILog interface, which is the Log class. This class makes sure that the log messages are formatted correctly and the LogMessage event is invoked when a message is written to the log.</p>
<p>Catel internally creates a separate log per type. This way, there will be lots of logs and it should be easy to filter the information the end-developer is really interested in.</p>
<h2 id="logmanager">LogManager<a class="headerlink" href="#logmanager" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The LogManager is the class where it all comes together. This class is responsible for creating new logs for types, but also keeps track of all logs and log listeners. To retrieve the log for a specific class, use the following code:</p>
<pre class="nocode">private static readonly ILog Log = LogManager.GetCurrentClassLogger();
</pre><h2 id="logging-in-code">Logging in code<a class="headerlink" href="#logging-in-code" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>To log in code, the ILog interface implements some basic methods to log information with an option for extra data. There are however lots of extension methods available to log exceptions, string formats and more. Below is an example of logging in code:</p>
<pre class="nocode">Log.Warning(&quot;Customer '{0}' does not exist&quot;, customerId); 
</pre><p>Or, if an exception is available, this can written to the log as well.</p>
<pre class="nocode">Log.Error(ex, &quot;Failed to delete file '{0}'&quot;, fileName); 
</pre><h2 id="logging-in-code-with-additional-data">Logging in code with additional data<a class="headerlink" href="#logging-in-code-with-additional-data" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Sometimes additional data is required (for example, the thread id, or anything else like this). The logging is extensible and contains on the the bare minimum required for logging. To pass in additional information, use the <em>[Level]WithData</em> methods (such as <em>DebugWithData</em>):</p>
<pre class="nocode">Log.Debug(&quot;This is a message from a specific thread&quot;, new LogData
{
    { &quot;ThreadId&quot;, threadId }
});
</pre><p>Then the log data will be available in the <em>LogData</em> of the <em>LogEntry</em>:</p>
<pre class="nocode">var logData = logEntry.LogData;
 
var threadId = logData[&quot;ThreadId&quot;];
</pre><h2 id="logging-to-the-output-window-or-console">Logging to the output window or console<a class="headerlink" href="#logging-to-the-output-window-or-console" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>By default, Catel does not add any listeners. However, it contains a ready-to-use implementation that writes all logs to the output window or console, which is the DebugLogListener. To register this listener, call this at any time:</p>
<pre class="nocode">#if DEBUG
LogManager.AddDebugListener();
#endif
</pre><p>Prior to Catel 3.8, one should use <em>LogManager.RegisterDebugListener()</em> instead</p>
<h2 id="overriding-global-log-level-flags">Overriding global log level flags<a class="headerlink" href="#overriding-global-log-level-flags" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Start with Catel 3.8, it is possible to override the global log level flags for all listeners. To do this, set the corresponding flag on the <em>LogManager</em> to a value. For example, to force debug logging on all log listeners, use the code below:</p>
<pre class="nocode">LogManager.IsDebugEnabled = true;
</pre><p>To reset the override, set the value back to <em>null</em>:</p>
<pre class="nocode">LogManager.IsDebugEnabled = null;
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/catel.github.io/blob/master/src/../src/vnext/catel-core/logging/introduction.md" target="_blank">contribute</a>!</p>
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../js/jquery-2.1.1.min.js"></script>
    <script src="../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../js/highlight.pack.js"></script>
    <script src="../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
