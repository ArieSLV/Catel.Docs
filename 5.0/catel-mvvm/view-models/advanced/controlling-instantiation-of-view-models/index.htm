<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Controlling the instantiation of view models - Catel documentation</title>
    <link rel="shortcut icon" href="../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../css/theme.css" type="text/css" />
    <link rel="stylesheet" href="../../../../css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="../../../../css/styles/vs.css">
    <link rel="stylesheet" href="../../../../css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="/welcome/index.htm"><i class="fa fa-home"></i> Catel documentation</a>
                <div role="search">
                    <form id="search-form" class="form" action="../../../../Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="../../../../home.htm">Home</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../introduction/">Introduction</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../faq/">FAQ</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../setup-deployment/">Setup, deployment & projects</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../getting-started/">Getting started</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../examples/">Examples</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-core/">Catel.Core</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-mvvm/">Catel.MVVM</a></span></li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/auditing/">Auditing</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/behaviors-triggers/">Behaviors & triggers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/bindings/">Bindings</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/commands-events/">Commands & events</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/converters/">Converters</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/designers/">Designers</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/locators-naming-conventions/">Locators & naming conventions</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/services/">Services</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-mvvm/view-models/">View models</a></span></li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/introduction/">Introduction</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/creating-basic-view-model/">Creating a basic view model</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/creating-view-model-with-model/">Creating a view model with a model</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/creating-view-model-with-model-and-mappings/">Creating a view model with a model and mappings</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/mapping-properties-from-view-to-view-model/">Mapping properties from view to view model</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/nested-view-models/">Nested view models</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/validation-in-view-models/">Validation in view models</a>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="../../../../catel-mvvm/view-models/advanced/">Advanced</a></span></li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/advanced/keeping-view-models-alive/">Keeping view models alive</a>
</li>
<li class="tocentry"><a href="../../../../catel-mvvm/view-models/advanced/exposing-properties-of-model-automatically/">Exposing properties of a model automatically</a>
</li>
<li class="tocentry current"><a class="current" href="../../../../catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models/">Controlling the instantiation of view models</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#how-to-control-the-view-model-instantiation-using-the-iviewmodelfactory">How to control the view model instantiation using the IViewModelFactory</a></li>

<li class="tocentry"><a href="#how-to-control-the-view-model-instantiation-using-a-usercontrol">How to control the view model instantiation using a UserControl</a></li>

<li class="tocentry"><a href="#how-to-control-the-view-model-instantiation-using-a-behavior">How to control the view model instantiation using a behavior</a></li>

<li class="tocentry"><a href="#preventing-the-logic-to-create-a-view-model-by-itself">Preventing the logic to create a view model by itself</a></li>



</ul>

</ul>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-mvvm/views/">Views</a></span>
</li>

</ul>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-fody/">Catel.Fody</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../catel-resharper/">Catel.ReSharper</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../tips-tricks/">Tips & tricks</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="../../../../reference/">API reference</a></span>
</li>

</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="../../../../index.htm">Catel documentation</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="../../../../home.htm">Home</a></li> / <li><a href="../../../../catel-mvvm/index.htm">Catel.MVVM</a></li> / <li><a href="../../../../catel-mvvm/view-models/index.htm">View models</a></li> / <li><a href="../../../../catel-mvvm/view-models/advanced/index.htm">Advanced</a></li> / <li><a href="../../../../catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models/index.htm">Controlling the instantiation of view models</a></li></ul>

                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="controlling-the-instantiation-of-view-models">Controlling the instantiation of view models<a class="headerlink" href="#controlling-the-instantiation-of-view-models" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<p>Starting with Catel 3.1, it is possible to take control of the view model instantiation of a view dynamically at runtime. This feature can be used when the construction of a view model is more complex than injecting the datacontext as model, or when the view model instance in a custom repository should be re-used.</p>
<h2 id="how-to-control-the-view-model-instantiation-using-the-iviewmodelfactory">How to control the view model instantiation using the IViewModelFactory<a class="headerlink" href="#how-to-control-the-view-model-instantiation-using-the-iviewmodelfactory" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The <code>IViewModelFactory</code> is the best way to customize the instantiation of view models in Catel. This allows full control for all view models because the factory will be used to create all view models, except when any other methods described below are used.</p>
<p>If customization of the view model instantiation is required, it is best the derive from the default <code>ViewModelFactory</code> class to be able to fall back to the default behavior in non-special cases.</p>
<pre class="nocode">public class CustomViewModelFactory : ViewModelFactory
{
    public override IViewModel CreateViewModel(Type viewModelType, object dataContext)
    {
        if (viewModelType == typeof(MySpecialViewModel))
        {
            // Use custom constructor with dependency injection
            return new MySpecialViewModel(dep1, dep2, dep3, dataContext);
        }

        // Fall back to default behavior
        return base.CreateViewModel(viewModelType, dataContext);
    }
}
</pre><p>When a custom factory is used, it is important to register it in the <code>ServiceLocator</code>:</p>
<pre class="nocode">ServiceLocator.Default.RegisterType&lt;IViewModelFactory, CustomViewModelFactory&gt;();
</pre><h2 id="how-to-control-the-view-model-instantiation-using-a-usercontrol">How to control the view model instantiation using a UserControl<a class="headerlink" href="#how-to-control-the-view-model-instantiation-using-a-usercontrol" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<div class="alert alert-warning"><span class="alert-title"><i class="fa fa-warning"></i> Important!</span><p>Note that it is best to use the <code>IViewModelFactory</code> for view model instantation because it is a more generic solution</p>
</div><p>Controlling the instantiation of the view model dynamically when using the <code>UserControl</code> is extremely easy. You can override the <code>GetViewModelInstance(object)</code> method like this:</p>
<pre class="nocode">protected override IViewModel GetViewModelInstance(object dataContext)
{
    if (dataContext is Rectangle)
    {
        return new RectangleViewModel((Rectangle)dataContext);
    }

    return null;
}
</pre><p>When the method returns <code>null</code>, the logic will try to construct the view model by itself.</p>
<h2 id="how-to-control-the-view-model-instantiation-using-a-behavior">How to control the view model instantiation using a behavior<a class="headerlink" href="#how-to-control-the-view-model-instantiation-using-a-behavior" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<div class="alert alert-warning"><span class="alert-title"><i class="fa fa-warning"></i> Important!</span><p>Note that it is best to use the <code>IViewModelFactory</code> for view model instantation because it is a more generic solution</p>
</div><p>Controlling the instantiation of the view model dynamically when using behaviors must be done via the <code>DetermineViewModelInstance</code> event like this:</p>
<pre class="nocode">mvvmBehavior.DetermineViewModelInstance += (sender, e) =&gt;
{
    var dataContext = e.DataContext;
    if (dataContext is Rectangle)
    {
        e.ViewModel = new RectangleViewModel((Rectangle)dataContext);
    }
};
</pre><p>There is no need to set the <em>e.ViewModel</em> to <em>null</em> because that is the default value.</p>
<h2 id="preventing-the-logic-to-create-a-view-model-by-itself">Preventing the logic to create a view model by itself<a class="headerlink" href="#preventing-the-logic-to-create-a-view-model-by-itself" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>When using the behavior, it is possible to prevent the logic to instantiate a view model. In this case, it is really possible to have full control over view model instantiation. To prevent the logic to create a view model, use this code:</p>
<pre class="nocode">mvvmBehavior.DetermineViewModelInstance += (sender, e) =&gt;
{
    var dataContext = e.DataContext;
    if (dataContext is Rectangle)
    {
        e.ViewModel = new RectangleViewModel((Rectangle)dataContext);
    }

    e.DoNotCreateViewModel = true;
};
</pre>
                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">

                      <p>
					    Is this section not up-to-date or found an issue? Please <a href="https://github.com/Catel/Catel.Docs/blob/master/src/../src/5.0/catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models.md" target="_blank">contribute</a>!
					  </p>
					  <p>
					    Have a question about Catel? Use <a href="https://stackoverflow.com/questions/tagged/catel" target="_blank">StackOverflow</a> with the <i>Catel</i> tag!
					  </p>
					  <hr />
					  <p>
					    <h2>Discussion</h2>
					   <div id="disqus_thread"></div>
					   <script>
					   var disqus_config = function () {
					   this.page.url = 'http://docs.catelproject.com/catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models/index.htm';
					   this.page.identifier = '../src/5.0/catel-mvvm/view-models/advanced/controlling-instantiation-of-view-models.md';
					   };
					   (function() { // DON'T EDIT BELOW THIS LINE
					   var d = document, s = d.createElement('script');
					   s.src = 'https://catel-docs.disqus.com/embed.js';
					   s.setAttribute('data-timestamp', +new Date());
					   (d.head || d.body).appendChild(s);
					   })();
					   </script>
					   <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
					  </p>
					</div>
                </footer>
            </div>
        </section>
    </div>
    <script src="../../../../js/jquery-2.1.1.min.js"></script>
    <script src="../../../../js/modernizr-2.8.3.min.js"></script>
    <script src="../../../../js/highlight.pack.js"></script>
    <script src="../../../../js/theme.js"></script>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    
      ga('create', 'UA-25600919-4', 'auto');
      ga('send', 'pageview');
    
    </script>
</body>
</html>
